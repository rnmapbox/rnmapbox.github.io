"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[6677],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),y=o,f=u["".concat(l,".").concat(y)]||u[y]||m[y]||a;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},5948:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={title:"Query Feature Point",tags:[],custom_props:{example_rel_path:"FillRasterLayer/QueryAtPoint.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/QueryAtPoint.js"},s=void 0,i={unversionedId:"examples/FillRasterLayer/QueryAtPoint",id:"examples/FillRasterLayer/QueryAtPoint",title:"Query Feature Point",description:"QueryAtPoint.png}",source:"@site/docs/examples/FillRasterLayer/QueryAtPoint.md",sourceDirName:"examples/FillRasterLayer",slug:"/examples/FillRasterLayer/QueryAtPoint",permalink:"/docs/examples/FillRasterLayer/QueryAtPoint",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/QueryAtPoint.js",tags:[],version:"current",frontMatter:{title:"Query Feature Point",tags:[],custom_props:{example_rel_path:"FillRasterLayer/QueryAtPoint.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/QueryAtPoint.js"},sidebar:"examplesSidebar",previous:{title:"Indoor Building Map",permalink:"/docs/examples/FillRasterLayer/IndoorBuilding"},next:{title:"Query Source Features",permalink:"/docs/examples/FillRasterLayer/QuerySourceFeatures"}},l={},p=[],c={toc:p},u="wrapper";function m(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Text } from 'react-native';\nimport MapboxGL from '@rnmapbox/maps';\n\nimport sheet from '../../styles/sheet';\nimport nycJSON from '../../assets/nyc_geojson.json';\nimport BaseExamplePropTypes from '../common/BaseExamplePropTypes';\nimport Page from '../common/Page';\nimport Bubble from '../common/Bubble';\n\nconst styles = {\n  neighborhoods: {\n    fillAntialias: true,\n    fillColor: 'blue',\n    fillOutlineColor: 'black',\n    fillOpacity: 0.84,\n  },\n  selectedNeighborhood: {\n    fillAntialias: true,\n    fillColor: 'green',\n    fillOpacity: 0.84,\n  },\n};\n\nclass QueryAtPoint extends React.Component {\n  static propTypes = {\n    ...BaseExamplePropTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = this.emptyState;\n    this.onPress = this.onPress.bind(this);\n  }\n\n  get emptyState() {\n    return { selectedGeoJSON: null, selectedCommunityDistrict: -1 };\n  }\n\n  async onPress(e) {\n    const { screenPointX, screenPointY } = e.properties;\n\n    const featureCollection = await this._map.queryRenderedFeaturesAtPoint(\n      [screenPointX, screenPointY],\n      null,\n      ['nycFill'],\n    );\n\n    if (featureCollection.features.length) {\n      this.setState({\n        selectedGeoJSON: featureCollection,\n        selectedCommunityDistrict:\n          featureCollection.features[0].properties.communityDistrict,\n      });\n    } else {\n      this.setState(this.emptyState);\n    }\n  }\n\n  render() {\n    return (\n      <Page {...this.props}>\n        <MapboxGL.MapView\n          ref={(c) => (this._map = c)}\n          onPress={this.onPress}\n          style={sheet.matchParent}\n          styleURL={MapboxGL.StyleURL.Light}\n        >\n          <MapboxGL.Camera\n            zoomLevel={9}\n            centerCoordinate={[-73.970895, 40.723279]}\n          />\n\n          <MapboxGL.ShapeSource id=\"nyc\" shape={nycJSON}>\n            <MapboxGL.FillLayer id=\"nycFill\" style={styles.neighborhoods} />\n          </MapboxGL.ShapeSource>\n\n          {this.state.selectedGeoJSON ? (\n            <MapboxGL.ShapeSource\n              id=\"selectedNYC\"\n              shape={this.state.selectedGeoJSON}\n            >\n              <MapboxGL.FillLayer\n                id=\"selectedNYCFill\"\n                style={styles.selectedNeighborhood}\n              />\n            </MapboxGL.ShapeSource>\n          ) : null}\n        </MapboxGL.MapView>\n\n        <Bubble>\n          <Text>Press on a feature to highlight it.</Text>\n        </Bubble>\n      </Page>\n    );\n  }\n}\n\nexport default QueryAtPoint;\n\n\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"QueryAtPoint.png",src:n(9854).Z,width:"295",height:"640"}),"}"))}m.isMDXComponent=!0},9854:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/QueryAtPoint-4b646a22e74d59aef57588a99cc57ab4.png"}}]);