"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[1605],{9861:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var o=t(5893),a=t(1151);const n={title:"GeoJSON Source",tags:[],custom_props:{example_rel_path:"FillRasterLayer/GeoJSONSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/GeoJSONSource.js"},s=void 0,l={id:"examples/FillRasterLayer/GeoJSONSource",title:"GeoJSON Source",description:"GeoJSONSource.png}",source:"@site/docs/examples/FillRasterLayer/GeoJSONSource.md",sourceDirName:"examples/FillRasterLayer",slug:"/examples/FillRasterLayer/GeoJSONSource",permalink:"/docs/examples/FillRasterLayer/GeoJSONSource",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/GeoJSONSource.js",tags:[],version:"current",frontMatter:{title:"GeoJSON Source",tags:[],custom_props:{example_rel_path:"FillRasterLayer/GeoJSONSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/GeoJSONSource.js"},sidebar:"examplesSidebar",previous:{title:"Custom Vector Source",permalink:"/docs/examples/FillRasterLayer/CustomVectorSource"},next:{title:"Image Overlay",permalink:"/docs/examples/FillRasterLayer/ImageOverlay"}},c={},p=[];function i(e){const r={code:"code",img:"img",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-jsx",children:"import React from 'react';\nimport MapboxGL from '@rnmapbox/maps';\n\nimport sheet from '../../styles/sheet';\nimport gridPattern from '../../assets/grid_pattern.png';\nimport smileyFaceGeoJSON from '../../assets/smiley_face.json';\nimport BaseExamplePropTypes from '../common/BaseExamplePropTypes';\nimport Page from '../common/Page';\n\nconst layerStyles = {\n  background: {\n    backgroundPattern: gridPattern,\n  },\n  smileyFace: {\n    fillAntialias: true,\n    fillColor: 'white',\n    fillOutlineColor: 'rgba(255, 255, 255, 0.84)',\n  },\n};\n\nclass GeoJSONSource extends React.Component {\n  static propTypes = {\n    ...BaseExamplePropTypes,\n  };\n\n  render() {\n    return (\n      <Page {...this.props}>\n        <MapboxGL.MapView\n          ref={(ref) => (this.map = ref)}\n          style={sheet.matchParent}\n          styleURL={MapboxGL.StyleURL.Dark}\n        >\n          <MapboxGL.Camera\n            zoomLevel={2}\n            centerCoordinate={[-35.15165038, 40.6235728]}\n          />\n\n          <MapboxGL.VectorSource>\n            <MapboxGL.BackgroundLayer\n              id=\"background\"\n              style={layerStyles.background}\n            />\n          </MapboxGL.VectorSource>\n\n          <MapboxGL.ShapeSource id=\"smileyFaceSource\" shape={smileyFaceGeoJSON}>\n            <MapboxGL.FillLayer\n              id=\"smileyFaceFill\"\n              style={layerStyles.smileyFace}\n            />\n          </MapboxGL.ShapeSource>\n        </MapboxGL.MapView>\n      </Page>\n    );\n  }\n}\n\nexport default GeoJSONSource;\n\n\n"})}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.img,{alt:"GeoJSONSource.png",src:t(5869).Z+"",width:"295",height:"640"}),"}"]})]})}function m(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},5869:(e,r,t)=>{t.d(r,{Z:()=>o});const o=t.p+"assets/images/GeoJSONSource-7f64c1dfe06f63bdae43d256e85d4e2f.png"},1151:(e,r,t)=>{t.d(r,{Z:()=>l,a:()=>s});var o=t(7294);const a={},n=o.createContext(a);function s(e){const r=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(n.Provider,{value:r},e.children)}}}]);