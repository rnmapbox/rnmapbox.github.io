"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[6832],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},i="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),i=p(r),y=o,f=i["".concat(l,".").concat(y)]||i[y]||m[y]||a;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=y;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[i]="string"==typeof e?e:o,s[1]=c;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},2551:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={title:"Custom Vector Source",tags:[],custom_props:{example_rel_path:"FillRasterLayer/CustomVectorSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/CustomVectorSource.js"},s=void 0,c={unversionedId:"examples/FillRasterLayer/CustomVectorSource",id:"examples/FillRasterLayer/CustomVectorSource",title:"Custom Vector Source",description:"CustomVectorSource.png}",source:"@site/docs/examples/FillRasterLayer/CustomVectorSource.md",sourceDirName:"examples/FillRasterLayer",slug:"/examples/FillRasterLayer/CustomVectorSource",permalink:"/docs/examples/FillRasterLayer/CustomVectorSource",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/CustomVectorSource.js",tags:[],version:"current",frontMatter:{title:"Custom Vector Source",tags:[],custom_props:{example_rel_path:"FillRasterLayer/CustomVectorSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/CustomVectorSource.js"},sidebar:"examplesSidebar",previous:{title:"Choropleth Layer By Zoom Level",permalink:"/docs/examples/FillRasterLayer/ChoroplethLayerByZoomLevel"},next:{title:"GeoJSON Source",permalink:"/docs/examples/FillRasterLayer/GeoJSONSource"}},l={},p=[],u={toc:p},i="wrapper";function m(e){let{components:t,...a}=e;return(0,o.kt)(i,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport MapboxGL from '@rnmapbox/maps';\n\nimport sheet from '../../styles/sheet';\nimport BaseExamplePropTypes from '../common/BaseExamplePropTypes';\nimport Page from '../common/Page';\n\nconst styles = {\n  boxFill: {\n    fillColor: [\n      'interpolate',\n      ['linear'],\n      ['get', 'box'],\n      0,\n      'green',\n      1,\n      'blue',\n    ],\n\n    fillAntialias: true,\n  },\n};\n\nconst VECTOR_SOURCE_URL =\n  'mapbox://nickitaliano.cj94go8xl18fl2qp92v8bdivv-4kgl9';\n\nclass CustomVectorSource extends React.PureComponent {\n  static propTypes = {\n    ...BaseExamplePropTypes,\n  };\n\n  state = {\n    featuresCount: null,\n  };\n\n  queryFeatures = async () => {\n    const features = await this._vectorSource.features([\n      'react-native-example',\n    ]);\n    this.setState({ featuresCount: features.features.length });\n  };\n\n  render() {\n    return (\n      <Page {...this.props}>\n        <MapboxGL.MapView style={sheet.matchParent}>\n          <MapboxGL.Camera\n            zoomLevel={2}\n            centerCoordinate={[-101.051593, 41.370337]}\n          />\n\n          <MapboxGL.VectorSource\n            id=\"customSourceExample\"\n            url={VECTOR_SOURCE_URL}\n            ref={(source) => {\n              this._vectorSource = source;\n            }}\n            onPress={(e) => {\n              console.log(`VectorSource onPress: ${e.features}`, e.features);\n            }}\n          >\n            <MapboxGL.FillLayer\n              id=\"customSourceFill\"\n              sourceLayerID=\"react-native-example\"\n              style={styles.boxFill}\n            />\n          </MapboxGL.VectorSource>\n        </MapboxGL.MapView>\n      </Page>\n    );\n  }\n}\n\nexport default CustomVectorSource;\n\n\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"CustomVectorSource.png",src:r(2577).Z,width:"295",height:"640"}),"}"))}m.isMDXComponent=!0},2577:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/CustomVectorSource-2065e7d8468dd79c069728b781429270.png"}}]);