"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[8263],{5250:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>l});var a=n(5893),r=n(1151);const i={custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/components/Images.tsx"},o=void 0,t={id:"components/Images",title:"Images",description:"Images defines the images used in Symbol etc. layers.",source:"@site/docs/components/Images.md",sourceDirName:"components",slug:"/components/Images",permalink:"/docs/components/Images",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/blob/main/src/components/Images.tsx",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/components/Images.tsx"},sidebar:"componentSidebar",previous:{title:"ImageSource",permalink:"/docs/components/ImageSource"},next:{title:"Light",permalink:"/docs/components/Light"}},c={},l=[{value:"props",id:"props",level:2},{value:"images",id:"images",level:3},{value:"nativeAssetImages",id:"nativeassetimages",level:3},{value:"onImageMissing",id:"onimagemissing",level:3},{value:"children",id:"children",level:3}];function m(e){const s={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-tsx",children:"import { Images } from '@rnmapbox/maps';\n\nImages\n\n"})}),"\n",(0,a.jsx)(s.p,{children:"Images defines the images used in Symbol etc. layers."}),"\n",(0,a.jsx)(s.h2,{id:"props",children:"props"}),"\n",(0,a.jsx)(s.h3,{id:"images",children:"images"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-tsx",children:"type Images = {\n  [object Object]: union; /* FIX ME NO DESCRIPTION */\n}\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Specifies the external images in key-value pairs required for the shape source.\nKeys are names - see iconImage expressions, values can be either urls-s objects\nwith format ",(0,a.jsx)(s.code,{children:"{uri: 'http://...'}"})," or ",(0,a.jsx)(s.code,{children:"require('image.png')"})," or ",(0,a.jsx)(s.code,{children:"import 'image.png'"})]}),"\n",(0,a.jsx)(s.h3,{id:"nativeassetimages",children:"nativeAssetImages"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-tsx",children:"Array\n"})}),"\n",(0,a.jsxs)(s.p,{children:["If you have an asset under Image.xcassets on iOS and the drawables directory on android\nyou can specify an array of string names with assets as the key ",(0,a.jsx)(s.code,{children:"['pin']"}),".\nAdditionally object with keys sdf, and strechX, strechY is supported for ",(0,a.jsx)(s.a,{href:"https://docs.mapbox.com/help/troubleshooting/using-recolorable-images-in-mapbox-maps/",children:"SDF icons"})]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{href:"../examples/SymbolCircleLayer/ShapeSourceIcon",children:"Shape Source Icons"})}),"\n",(0,a.jsx)(s.h3,{id:"onimagemissing",children:"onImageMissing"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-tsx",children:"func\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Gets called when a Layer is trying to render an image whose key is not present in\nany of the ",(0,a.jsx)(s.code,{children:"Images"})," component of the Map.\n",(0,a.jsx)(s.em,{children:"signature:"}),(0,a.jsx)(s.code,{children:"(imageKey:string) =&gt; void"})]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{href:"../examples/SymbolCircleLayer/ShapeSourceIcon",children:"Shape Source Icons"})}),"\n",(0,a.jsx)(s.h3,{id:"children",children:"children"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-tsx",children:"ReactElement<T> | Array<TypedReactNode<T>> | never\n"})}),"\n",(0,a.jsx)(s.p,{children:"FIX ME NO DESCRIPTION"})]})}function d(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},1151:(e,s,n)=>{n.d(s,{a:()=>o});var a=n(7294);const r={},i=a.createContext(r);function o(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}}}]);