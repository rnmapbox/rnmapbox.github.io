"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[6216],{3834:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=e(5893),a=e(1151);const i={title:"Marker View",tags:["PointAnnotation","MarkerView"],custom_props:{example_rel_path:"Annotations/MarkerView.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/MarkerView.tsx"},r=void 0,s={id:"examples/Annotations/MarkerView",title:"Marker View",description:"Shows marker view and poitn annotations",source:"@site/docs/examples/Annotations/MarkerView.md",sourceDirName:"examples/Annotations",slug:"/examples/Annotations/MarkerView",permalink:"/docs/examples/Annotations/MarkerView",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/MarkerView.tsx",tags:[{inline:!0,label:"PointAnnotation",permalink:"/docs/tags/point-annotation"},{inline:!0,label:"MarkerView",permalink:"/docs/tags/marker-view"}],version:"current",frontMatter:{title:"Marker View",tags:["PointAnnotation","MarkerView"],custom_props:{example_rel_path:"Annotations/MarkerView.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/MarkerView.tsx"},sidebar:"examplesSidebar",previous:{title:"Heatmap",permalink:"/docs/examples/Annotations/Heatmap"},next:{title:"Point Annotation Anchors",permalink:"/docs/examples/Annotations/PointAnnotationAnchors"}},l={},p=[];function c(n){const t={code:"code",img:"img",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Shows marker view and poitn annotations"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport { Button, StyleSheet, View, Text, TouchableOpacity } from 'react-native';\nimport Mapbox from '@rnmapbox/maps';\n\nimport Bubble from '../common/Bubble';\n\nconst styles = StyleSheet.create({\n  touchableContainer: { borderColor: 'black', borderWidth: 1.0, width: 60 },\n  touchable: {\n    backgroundColor: 'blue',\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  touchableText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  matchParent: { flex: 1 },\n});\n\nconst AnnotationContent = ({ title }: { title: string }) => (\n  <View style={styles.touchableContainer} collapsable={false}>\n    <Text>{title}</Text>\n    <TouchableOpacity style={styles.touchable}>\n      <Text style={styles.touchableText}>Btn</Text>\n    </TouchableOpacity>\n  </View>\n);\nconst INITIAL_COORDINATES: [number, number][] = [\n  [-73.99155, 40.73581],\n  [-73.99155, 40.73681],\n];\n\nconst ShowMarkerView = () => {\n  const [pointList, setPointList] =\n    React.useState<GeoJSON.Position[]>(INITIAL_COORDINATES);\n  const [allowOverlapWithPuck, setAllowOverlapWithPuck] =\n    React.useState<boolean>(false);\n\n  const onPressMap = (e: GeoJSON.Feature) => {\n    const geometry = e.geometry as GeoJSON.Point;\n    setPointList((pl) => [...pl, geometry.coordinates]);\n  };\n\n  return (\n    <>\n      <Button\n        title={\n          allowOverlapWithPuck\n            ? 'allowOverlapWithPuck true'\n            : 'allowOverlapWithPuck false'\n        }\n        onPress={() => setAllowOverlapWithPuck((prev) => !prev)}\n      />\n      <Mapbox.MapView onPress={onPressMap} style={styles.matchParent}>\n        <Mapbox.Camera\n          defaultSettings={{\n            zoomLevel: 16,\n            centerCoordinate: pointList[0],\n          }}\n        />\n\n        <Mapbox.PointAnnotation coordinate={pointList[1]} id=\"pt-ann\">\n          <AnnotationContent title={'this is a point annotation'} />\n        </Mapbox.PointAnnotation>\n\n        <Mapbox.MarkerView\n          coordinate={pointList[0]}\n          allowOverlapWithPuck={allowOverlapWithPuck}\n        >\n          <AnnotationContent title={'this is a marker view'} />\n        </Mapbox.MarkerView>\n\n        {pointList.slice(2).map((coordinate, index) => (\n          <Mapbox.PointAnnotation\n            coordinate={coordinate}\n            id={`pt-ann-${index}`}\n            key={`pt-ann-${index}`}\n          >\n            <AnnotationContent title={'this is a point annotation'} />\n          </Mapbox.PointAnnotation>\n        ))}\n\n        <Mapbox.NativeUserLocation />\n      </Mapbox.MapView>\n\n      <Bubble>\n        <Text>Tap on map to add a point annotation</Text>\n      </Bubble>\n    </>\n  );\n};\n\nexport default ShowMarkerView;\n\n\n"})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.img,{alt:"MarkerView.png",src:e(7971).Z+"",width:"295",height:"640"}),"}"]})]})}function m(n={}){const{wrapper:t}={...(0,a.a)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},7971:(n,t,e)=>{e.d(t,{Z:()=>o});const o=e.p+"assets/images/MarkerView-31fe05ca57c7a98f8fedb251529652f7.png"},1151:(n,t,e)=>{e.d(t,{Z:()=>s,a:()=>r});var o=e(7294);const a={},i=o.createContext(a);function r(n){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),o.createElement(i.Provider,{value:t},n.children)}}}]);