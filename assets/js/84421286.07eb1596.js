"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[8068],{9422:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(5893),t=n(1151);const o={title:"Change Layer Color",tags:["FillLayer#existing","FillLayer#fillColor"],custom_props:{example_rel_path:"Map/ChangeLayerColor.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ChangeLayerColor.js"},l=void 0,s={id:"examples/Map/ChangeLayerColor",title:"Change Layer Color",description:"Change style of a layer part of the map on the fly.",source:"@site/docs/examples/Map/ChangeLayerColor.md",sourceDirName:"examples/Map",slug:"/examples/Map/ChangeLayerColor",permalink:"/docs/examples/Map/ChangeLayerColor",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ChangeLayerColor.js",tags:[{inline:!0,label:"FillLayer#existing",permalink:"/docs/tags/fill-layer-existing"},{inline:!0,label:"FillLayer#fillColor",permalink:"/docs/tags/fill-layer-fill-color"}],version:"current",frontMatter:{title:"Change Layer Color",tags:["FillLayer#existing","FillLayer#fillColor"],custom_props:{example_rel_path:"Map/ChangeLayerColor.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ChangeLayerColor.js"},sidebar:"examplesSidebar",previous:{title:"Third Party Vector Source",permalink:"/docs/examples/LineLayer/ThirdPartyVectorSource"},next:{title:"Change Offline Region",permalink:"/docs/examples/Map/CreateOfflineRegion"}},i={},p=[];function m(e){const a={code:"code",img:"img",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.p,{children:"Change style of a layer part of the map on the fly."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-jsx",children:"import React from 'react';\nimport { Text } from 'react-native';\nimport { MapView, FillLayer, Camera } from '@rnmapbox/maps';\n\nimport Bubble from '../common/Bubble';\n\nconst defaultCamera = {\n  centerCoordinate: [12.338, 45.4385],\n  zoomLevel: 17.4,\n};\n\nconst styles = {\n  mapView: { flex: 1 },\n};\n\nclass ChangeLayerColor extends React.Component {\n  state = {\n    fillColor: '',\n  };\n\n  onPress = () => {\n    const fillColor = `#${Math.random().toString(16).substr(-6)}`;\n    this.setState({ fillColor });\n  };\n\n  render() {\n    const { fillColor } = this.state;\n    return (\n      <>\n        <MapView\n          ref={(c) => (this._map = c)}\n          onPress={this.onPress}\n          style={styles.mapView}\n        >\n          <Camera defaultSettings={defaultCamera} />\n          {!!fillColor && (\n            <FillLayer id=\"water\" existing style={{ fillColor }} />\n          )}\n        </MapView>\n        <Bubble onPress={this.onPress}>\n          <Text>Paint Water</Text>\n        </Bubble>\n      </>\n    );\n  }\n}\n\nexport default ChangeLayerColor;\n\n\n"})}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.img,{alt:"ChangeLayerColor.png",src:n(9255).Z+"",width:"295",height:"640"}),"}"]})]})}function c(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},9255:(e,a,n)=>{n.d(a,{Z:()=>r});const r=n.p+"assets/images/ChangeLayerColor-ca782914131e27c21c87627919bfac46.png"},1151:(e,a,n)=>{n.d(a,{a:()=>l});var r=n(7294);const t={},o=r.createContext(t);function l(e){const a=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}}}]);