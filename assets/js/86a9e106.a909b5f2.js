"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[68],{316:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>r,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var t=n(5893),s=n(1151);const i={title:"Map and React Navigation",tags:["MapView"],custom_props:{example_rel_path:"Map/MapAndRNNavigation.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/MapAndRNNavigation.js"},o=void 0,p={id:"examples/Map/MapAndRNNavigation",title:"Map and React Navigation",description:"Demonstrates various ways to embedd map via (Navigation, Page, modal, etc)",source:"@site/docs/examples/Map/MapAndRNNavigation.md",sourceDirName:"examples/Map",slug:"/examples/Map/MapAndRNNavigation",permalink:"/docs/examples/Map/MapAndRNNavigation",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/MapAndRNNavigation.js",tags:[{inline:!0,label:"MapView",permalink:"/docs/tags/map-view"}],version:"current",frontMatter:{title:"Map and React Navigation",tags:["MapView"],custom_props:{example_rel_path:"Map/MapAndRNNavigation.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/MapAndRNNavigation.js"},sidebar:"examplesSidebar",previous:{title:"Localize Labels",permalink:"/docs/examples/Map/LocalizeLabels"},next:{title:"Offline Example",permalink:"/docs/examples/Map/OfflineExample"}},r={},l=[];function d(e){const a={code:"code",img:"img",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.p,{children:"Demonstrates various ways to embedd map via (Navigation, Page, modal, etc)"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-jsx",children:"import React, { useState } from 'react';\nimport { Button, Modal, Text, SafeAreaView } from 'react-native';\nimport { MapView, UserLocation, Camera } from '@rnmapbox/maps';\n\n/**\n * @param {ItempProps['navigation']} navigation\n */\nexport default function MapAndNavigation({ navigation }) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [showMap, setShowMap] = useState(false);\n\n  return (\n    <>\n      <Button title=\"Modal\" onPress={() => setModalVisible(true)} />\n      <Button\n        title=\"Toggle map\"\n        onPress={() => setShowMap((showMap) => !showMap)}\n      />\n      <Button\n        title=\"Navigate\"\n        onPress={() => navigation.navigate('ScreenWithoutMap')}\n      />\n      <Modal\n        animationType=\"slide\"\n        transparent={false}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(false);\n        }}\n      >\n        <SafeAreaView style={{ flex: 1 }}>\n          <Text>this is a modal</Text>\n          <Button\n            title=\"close\"\n            onPress={() => {\n              setModalVisible(false);\n            }}\n          />\n          <MapView style={{ flex: 1 }} />\n        </SafeAreaView>\n      </Modal>\n      {showMap && (\n        <MapView style={{ flex: 1 }}>\n          <Camera\n            centerCoordinate={[-74.00597, 40.71427]}\n            zoomLevel={14}\n            followUserLocation\n            followZoomLevel={14}\n          />\n          <UserLocation\n            androidRenderMode={'gps'}\n            showsUserHeadingIndicator={true}\n            renderMode={'native'}\n          />\n        </MapView>\n      )}\n    </>\n  );\n}\n\n\n"})}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.img,{alt:"MapAndRNNavigation.png",src:n(9120).Z+"",width:"295",height:"640"}),"}"]})]})}function m(e={}){const{wrapper:a}={...(0,s.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},9120:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/MapAndRNNavigation-5cdd09b97b470df853a1db3916c10b71.png"},1151:(e,a,n)=>{n.d(a,{a:()=>o});var t=n(7294);const s={},i=t.createContext(s);function o(e){const a=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}}}]);