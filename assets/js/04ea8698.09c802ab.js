"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[1605],{290:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var a=t(5893),n=t(1151);const o={title:"GeoJSON Source",tags:[],custom_props:{example_rel_path:"FillRasterLayer/GeoJSONSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/GeoJSONSource.js"},s=void 0,c={id:"examples/FillRasterLayer/GeoJSONSource",title:"GeoJSON Source",description:"GeoJSONSource.png}",source:"@site/docs/examples/FillRasterLayer/GeoJSONSource.md",sourceDirName:"examples/FillRasterLayer",slug:"/examples/FillRasterLayer/GeoJSONSource",permalink:"/docs/examples/FillRasterLayer/GeoJSONSource",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/GeoJSONSource.js",tags:[],version:"current",frontMatter:{title:"GeoJSON Source",tags:[],custom_props:{example_rel_path:"FillRasterLayer/GeoJSONSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/GeoJSONSource.js"},sidebar:"examplesSidebar",previous:{title:"Custom Vector Source",permalink:"/docs/examples/FillRasterLayer/CustomVectorSource"},next:{title:"Image Overlay",permalink:"/docs/examples/FillRasterLayer/ImageOverlay"}},l={},i=[];function p(e){const r={code:"code",img:"img",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:"import React from 'react';\nimport {\n  MapView,\n  Camera,\n  ShapeSource,\n  FillLayer,\n  VectorSource,\n  BackgroundLayer,\n  StyleURL,\n} from '@rnmapbox/maps';\n\nimport sheet from '../../styles/sheet';\nimport gridPattern from '../../assets/grid_pattern.png';\nimport smileyFaceGeoJSON from '../../assets/smiley_face.json';\nimport BaseExamplePropTypes from '../common/BaseExamplePropTypes';\n\nconst layerStyles = {\n  background: {\n    backgroundPattern: gridPattern,\n  },\n  smileyFace: {\n    fillAntialias: true,\n    fillColor: 'white',\n    fillOutlineColor: 'rgba(255, 255, 255, 0.84)',\n  },\n};\n\nclass GeoJSONSource extends React.Component {\n  static propTypes = {\n    ...BaseExamplePropTypes,\n  };\n\n  render() {\n    return (\n      <>\n        <MapView\n          ref={(ref) => {\n            this.map = ref;\n          }}\n          style={sheet.matchParent}\n          styleURL={StyleURL.Dark}\n        >\n          <Camera zoomLevel={2} centerCoordinate={[-35.15165038, 40.6235728]} />\n\n          <VectorSource>\n            <BackgroundLayer id=\"background\" style={layerStyles.background} />\n          </VectorSource>\n\n          <ShapeSource id=\"smileyFaceSource\" shape={smileyFaceGeoJSON}>\n            <FillLayer id=\"smileyFaceFill\" style={layerStyles.smileyFace} />\n          </ShapeSource>\n        </MapView>\n      </>\n    );\n  }\n}\n\nexport default GeoJSONSource;\n\n\n"})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.img,{alt:"GeoJSONSource.png",src:t(5869).Z+"",width:"295",height:"640"}),"}"]})]})}function m(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},5869:(e,r,t)=>{t.d(r,{Z:()=>a});const a=t.p+"assets/images/GeoJSONSource-06a765abc5f21c9c6fec5b3dc3f0c217.png"},1151:(e,r,t)=>{t.d(r,{Z:()=>c,a:()=>s});var a=t(7294);const n={},o=a.createContext(n);function s(e){const r=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.createElement(o.Provider,{value:r},e.children)}}}]);