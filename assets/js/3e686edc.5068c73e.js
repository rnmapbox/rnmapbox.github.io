"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[6216],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},b=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),b=r,d=m["".concat(l,".").concat(b)]||m[b]||u[b]||a;return n?o.createElement(d,i(i({ref:t},c),{},{components:n})):o.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}b.displayName="MDXCreateElement"},2398:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={title:"Marker View",tags:["PointAnnotation","MarkerView"],custom_props:{example_rel_path:"Annotations/MarkerView.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/MarkerView.tsx"},i=void 0,s={unversionedId:"examples/Annotations/MarkerView",id:"examples/Annotations/MarkerView",title:"Marker View",description:"Shows marker view and poitn annotations",source:"@site/docs/examples/Annotations/MarkerView.md",sourceDirName:"examples/Annotations",slug:"/examples/Annotations/MarkerView",permalink:"/docs/examples/Annotations/MarkerView",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/MarkerView.tsx",tags:[{label:"PointAnnotation",permalink:"/docs/tags/point-annotation"},{label:"MarkerView",permalink:"/docs/tags/marker-view"}],version:"current",frontMatter:{title:"Marker View",tags:["PointAnnotation","MarkerView"],custom_props:{example_rel_path:"Annotations/MarkerView.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/MarkerView.tsx"},sidebar:"examplesSidebar",previous:{title:"Heatmap",permalink:"/docs/examples/Annotations/Heatmap"},next:{title:"Point Annotation Anchors",permalink:"/docs/examples/Annotations/PointAnnotationAnchors"}},l={},p=[],c={toc:p},m="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,o.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Shows marker view and poitn annotations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Button, StyleSheet, View, Text, TouchableOpacity } from 'react-native';\nimport Mapbox from '@rnmapbox/maps';\n\nimport Bubble from '../common/Bubble';\n\nconst styles = StyleSheet.create({\n  touchableContainer: { borderColor: 'black', borderWidth: 1.0, width: 60 },\n  touchable: {\n    backgroundColor: 'blue',\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  touchableText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  matchParent: { flex: 1 },\n});\n\nconst AnnotationContent = ({ title }: { title: string }) => (\n  <View style={styles.touchableContainer}>\n    <Text>{title}</Text>\n    <TouchableOpacity style={styles.touchable}>\n      <Text style={styles.touchableText}>Btn</Text>\n    </TouchableOpacity>\n  </View>\n);\nconst INITIAL_COORDINATES: [number, number][] = [\n  [-73.99155, 40.73581],\n  [-73.99155, 40.73681],\n];\n\nconst ShowMarkerView = () => {\n  const [pointList, setPointList] =\n    React.useState<GeoJSON.Position[]>(INITIAL_COORDINATES);\n  const [allowOverlapWithPuck, setAllowOverlapWithPuck] =\n    React.useState<boolean>(false);\n\n  const onPressMap = (e: GeoJSON.Feature) => {\n    const geometry = e.geometry as GeoJSON.Point;\n    setPointList((pl) => [...pl, geometry.coordinates]);\n  };\n\n  return (\n    <>\n      <Button\n        title={\n          allowOverlapWithPuck\n            ? 'allowOverlapWithPuck true'\n            : 'allowOverlapWithPuck false'\n        }\n        onPress={() => setAllowOverlapWithPuck((prev) => !prev)}\n      />\n      <Mapbox.MapView onPress={onPressMap} style={styles.matchParent}>\n        <Mapbox.Camera\n          defaultSettings={{\n            zoomLevel: 16,\n            centerCoordinate: pointList[0],\n          }}\n        />\n\n        <Mapbox.PointAnnotation coordinate={pointList[1]} id=\"pt-ann\">\n          <AnnotationContent title={'this is a point annotation'} />\n        </Mapbox.PointAnnotation>\n\n        <Mapbox.MarkerView\n          coordinate={pointList[0]}\n          allowOverlapWithPuck={allowOverlapWithPuck}\n        >\n          <AnnotationContent title={'this is a marker view'} />\n        </Mapbox.MarkerView>\n\n        {pointList.slice(2).map((coordinate, index) => (\n          <Mapbox.PointAnnotation\n            coordinate={coordinate}\n            id={`pt-ann-${index}`}\n            key={`pt-ann-${index}`}\n          >\n            <AnnotationContent title={'this is a point annotation'} />\n          </Mapbox.PointAnnotation>\n        ))}\n\n        <Mapbox.NativeUserLocation />\n      </Mapbox.MapView>\n\n      <Bubble>\n        <Text>Tap on map to add a point annotation</Text>\n      </Bubble>\n    </>\n  );\n};\n\nexport default ShowMarkerView;\n\n\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"MarkerView.png",src:n(7971).Z,width:"295",height:"640"}),"}"))}u.isMDXComponent=!0},7971:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/MarkerView-0db87a93b6e219b1e7c50320f79cbd27.png"}}]);