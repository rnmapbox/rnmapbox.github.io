"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[5254],{3905:(n,t,e)=>{e.d(t,{Zo:()=>p,kt:()=>d});var o=e(7294);function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function a(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,o)}return e}function i(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?a(Object(e),!0).forEach((function(t){r(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function s(n,t){if(null==n)return{};var e,o,r=function(n,t){if(null==n)return{};var e,o,r={},a=Object.keys(n);for(o=0;o<a.length;o++)e=a[o],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(o=0;o<a.length;o++)e=a[o],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var c=o.createContext({}),l=function(n){var t=o.useContext(c),e=t;return n&&(e="function"==typeof n?n(t):i(i({},t),n)),e},p=function(n){var t=l(n.components);return o.createElement(c.Provider,{value:t},n.children)},m="mdxType",u={inlineCode:"code",wrapper:function(n){var t=n.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(n,t){var e=n.components,r=n.mdxType,a=n.originalType,c=n.parentName,p=s(n,["components","mdxType","originalType","parentName"]),m=l(e),h=r,d=m["".concat(c,".").concat(h)]||m[h]||u[h]||a;return e?o.createElement(d,i(i({ref:t},p),{},{components:e})):o.createElement(d,i({ref:t},p))}));function d(n,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var a=e.length,i=new Array(a);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=n,s[m]="string"==typeof n?n:r,i[1]=s;for(var l=2;l<a;l++)i[l]=e[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,e)}h.displayName="MDXCreateElement"},8471:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=e(7462),r=(e(7294),e(3905));const a={title:"Point Annotation Anchors",tags:["PointAnnotation"],custom_props:{example_rel_path:"Annotations/PointAnnotationAnchors.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/PointAnnotationAnchors.js"},i=void 0,s={unversionedId:"examples/Annotations/PointAnnotationAnchors",id:"examples/Annotations/PointAnnotationAnchors",title:"Point Annotation Anchors",description:"Point annotation anchors test",source:"@site/docs/examples/Annotations/PointAnnotationAnchors.md",sourceDirName:"examples/Annotations",slug:"/examples/Annotations/PointAnnotationAnchors",permalink:"/docs/examples/Annotations/PointAnnotationAnchors",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/PointAnnotationAnchors.js",tags:[{label:"PointAnnotation",permalink:"/docs/tags/point-annotation"}],version:"current",frontMatter:{title:"Point Annotation Anchors",tags:["PointAnnotation"],custom_props:{example_rel_path:"Annotations/PointAnnotationAnchors.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/PointAnnotationAnchors.js"},sidebar:"examplesSidebar",previous:{title:"Marker View",permalink:"/docs/examples/Annotations/MarkerView"},next:{title:"Show Point Annotations",permalink:"/docs/examples/Annotations/ShowPointAnnotation"}},c={},l=[],p={toc:l},m="wrapper";function u(n){let{components:t,...a}=n;return(0,r.kt)(m,(0,o.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Point annotation anchors test"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Mapbox from '@rnmapbox/maps';\nimport { StyleSheet, Text, View } from 'react-native';\n\nconst ANNOTATION_SIZE = 50;\n\nconst defaultCamera = {\n  centerCoordinate: [-73.98004319979121, 40.75272669831773],\n  zoomLevel: 17,\n};\n\nconst corners = [\n  {\n    coordinate: [-73.980313714175, 40.75279456928388],\n    anchor: { x: 0, y: 1 },\n  },\n  {\n    coordinate: [-73.9803415496257, 40.75275624885313],\n    anchor: { x: 0, y: 0 },\n  },\n  {\n    coordinate: [-73.98048535932631, 40.752816154647235],\n    anchor: { x: 1, y: 0 },\n  },\n  {\n    coordinate: [-73.98045541426053, 40.75285444197175],\n    anchor: { x: 1, y: 1 },\n  },\n];\n\nconst sides = [\n  {\n    coordinate: [-73.97952569308393, 40.75274356459241],\n    anchor: { x: 1 / 3, y: 0 },\n  },\n  {\n    coordinate: [-73.98082017858928, 40.75329086324669],\n    anchor: { x: 1 / 3, y: 1 },\n  },\n  {\n    coordinate: [-73.97985980165191, 40.752286242917535],\n    anchor: { x: 0, y: 1 / 3 },\n    containerStyle: { flexDirection: 'row' },\n  },\n];\n\nconst styles = {\n  small: {\n    backgroundColor: 'blue',\n    height: ANNOTATION_SIZE,\n    justifyContent: 'center',\n    width: ANNOTATION_SIZE,\n    flex: 1,\n  },\n  large: {\n    borderColor: 'blue',\n    backgroundColor: 'transparent',\n    borderWidth: StyleSheet.hairlineWidth,\n    height: ANNOTATION_SIZE * 2,\n    justifyContent: 'center',\n    width: ANNOTATION_SIZE * 2,\n    flex: 1,\n  },\n  text: {\n    position: 'absolute',\n    fontSize: 10,\n  },\n  matchParent: {\n    flex: 1,\n  },\n};\n\nconst PointAnnotationAnchors = (props) => {\n  return (\n    <Mapbox.MapView style={styles.matchParent}>\n      <Mapbox.Camera defaultSettings={defaultCamera} />\n      {corners.map((p, i) => (\n        <Mapbox.PointAnnotation\n          key={`square-${i}`}\n          id={`square-${i}`}\n          coordinate={p.coordinate}\n          anchor={p.anchor}\n        >\n          <View style={styles.small}>\n            <Text style={[styles.text, { color: 'white' }]}>\n              x={p.anchor.x.toPrecision(2)}, y={p.anchor.y.toPrecision(2)}\n            </Text>\n          </View>\n        </Mapbox.PointAnnotation>\n      ))}\n      {sides.map((p, i) => {\n        let { x, y } = p.anchor;\n        if (x === 1) {\n          x = 0;\n        }\n        if (y === 1) {\n          y = 0;\n        }\n        return (\n          <Mapbox.PointAnnotation\n            key={`triangle-${i}`}\n            id={`triangle-${i}`}\n            coordinate={p.coordinate}\n            anchor={p.anchor}\n          >\n            <View style={[styles.large, p.containerStyle]}>\n              <View\n                style={{\n                  height: ANNOTATION_SIZE * 2,\n                  width: ANNOTATION_SIZE * 2 * x,\n                  backgroundColor: 'green',\n                }}\n              />\n              <View\n                style={{\n                  height: ANNOTATION_SIZE * 2 * y,\n                  width: ANNOTATION_SIZE * 2,\n                  backgroundColor: 'green',\n                }}\n              />\n              <Text style={[styles.text, { color: 'black' }]}>\n                x={p.anchor.x.toPrecision(2)}, y={p.anchor.y.toPrecision(2)}\n              </Text>\n            </View>\n          </Mapbox.PointAnnotation>\n        );\n      })}\n    </Mapbox.MapView>\n  );\n};\n\nexport default PointAnnotationAnchors;\n\n\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"PointAnnotationAnchors.png",src:e(4580).Z,width:"295",height:"640"}),"}"))}u.isMDXComponent=!0},4580:(n,t,e)=>{e.d(t,{Z:()=>o});const o=e.p+"assets/images/PointAnnotationAnchors-e95b4c2a324d5983050b6cc4f93cd5c5.png"}}]);