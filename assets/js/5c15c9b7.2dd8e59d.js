"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[5244],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(a),g=r,k=m["".concat(c,".").concat(g)]||m[g]||d[g]||l;return a?n.createElement(k,i(i({ref:t},s),{},{components:a})):n.createElement(k,i({ref:t},s))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=g;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},701:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/modules/offline/offlineManagerLegacy.ts"},i=void 0,o={unversionedId:"components/offlineManagerLegacy",id:"components/offlineManagerLegacy",title:"offlineManagerLegacy",description:"OfflineManagerLegacy implements a singleton (shared object) that manages offline packs.",source:"@site/docs/components/offlineManagerLegacy.md",sourceDirName:"components",slug:"/components/offlineManagerLegacy",permalink:"/docs/components/offlineManagerLegacy",draft:!1,editUrl:"https://github.com/rnmapbox/maps/blob/main/src/modules/offline/offlineManagerLegacy.ts",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/modules/offline/offlineManagerLegacy.ts"},sidebar:"componentSidebar",previous:{title:"offlineManager",permalink:"/docs/components/offlineManager"},next:{title:"snapshotManager",permalink:"/docs/components/snapshotManager"}},c={},p=[{value:"methods",id:"methods",level:2},{value:"createPack(options)",id:"createpackoptions",level:3},{value:"arguments",id:"arguments",level:4},{value:"invalidatePack(name)",id:"invalidatepackname",level:3},{value:"arguments",id:"arguments-1",level:4},{value:"deletePack(name)",id:"deletepackname",level:3},{value:"arguments",id:"arguments-2",level:4},{value:"migrateOfflineCache()",id:"migrateofflinecache",level:3},{value:"arguments",id:"arguments-3",level:4},{value:"resetDatabase()",id:"resetdatabase",level:3},{value:"arguments",id:"arguments-4",level:4},{value:"getPacks()",id:"getpacks",level:3},{value:"arguments",id:"arguments-5",level:4},{value:"getPack(name)",id:"getpackname",level:3},{value:"arguments",id:"arguments-6",level:4}],s={toc:p},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { offlineManagerLegacy } from '@rnmapbox/maps';\n\nofflineManagerLegacy\n\n")),(0,r.kt)("p",null,"OfflineManagerLegacy implements a singleton (shared object) that manages offline packs.\nAll of this class\u2019s instance methods are asynchronous, reflecting the fact that offline resources are stored in a database.\nThe shared object maintains a canonical collection of offline packs."),(0,r.kt)("h2",{id:"methods"},"methods"),(0,r.kt)("h3",{id:"createpackoptions"},"createPack(options)"),(0,r.kt)("p",null,"Creates and registers an offline pack that downloads the resources needed to use the given region offline."),(0,r.kt)("h4",{id:"arguments"},"arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"OfflineCreatePackOptions")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Create options for a offline pack that specifices zoom levels, style url, and the region to download.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"await Mapbox.offlineManager.createPack({\n  name: 'offlinePack',\n  styleURL: 'mapbox://...',\n  minZoom: 14,\n  maxZoom: 20,\n  bounds: [[neLng, neLat], [swLng, swLat]]\n})\n")),(0,r.kt)("h3",{id:"invalidatepackname"},"invalidatePack(name)"),(0,r.kt)("p",null,"Invalidates the specified offline pack. This method checks that the tiles in the specified offline pack match those from the server. Local tiles that do not match the latest version on the server are updated.This is more efficient than deleting the offline pack and downloading it again. If the data stored locally matches that on the server, new data will not be downloaded."),(0,r.kt)("h4",{id:"arguments-1"},"arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Name of the offline pack.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"await Mapbox.offlineManagerLegacy.invalidatePack('packName')\n")),(0,r.kt)("h3",{id:"deletepackname"},"deletePack(name)"),(0,r.kt)("p",null,"Unregisters the given offline pack and allows resources that are no longer required by any remaining packs to be potentially freed."),(0,r.kt)("h4",{id:"arguments-2"},"arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Name of the offline pack.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"await Mapbox.offlineManagerLegacy.deletePack('packName')\n")),(0,r.kt)("h3",{id:"migrateofflinecache"},"migrateOfflineCache()"),(0,r.kt)("p",null,"Migrates the offline cache from pre-v10 SDKs to the new v10 cache location"),(0,r.kt)("h4",{id:"arguments-3"},"arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"await Mapbox.offlineManager.migrateOfflineCache()\n")),(0,r.kt)("h3",{id:"resetdatabase"},"resetDatabase()"),(0,r.kt)("p",null,"Deletes the existing database, which includes both the ambient cache and offline packs, then reinitializes it."),(0,r.kt)("h4",{id:"arguments-4"},"arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"await Mapbox.offlineManager.resetDatabase();\n")),(0,r.kt)("h3",{id:"getpacks"},"getPacks()"),(0,r.kt)("p",null,"Retrieves all the current offline packs that are stored in the database."),(0,r.kt)("h4",{id:"arguments-5"},"arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const offlinePacks = await Mapbox.offlineManagerLegacy.getPacks();\n")),(0,r.kt)("h3",{id:"getpackname"},"getPack(name)"),(0,r.kt)("p",null,"Retrieves an offline pack that is stored in the database by name."),(0,r.kt)("h4",{id:"arguments-6"},"arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Name of the offline pack.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const offlinePack = await Mapbox.offlineManagerLegacy.getPack();\n")))}d.isMDXComponent=!0}}]);