"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[3027],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>y});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},m=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=i(r),f=o,y=c["".concat(l,".").concat(f)]||c[f]||u[f]||a;return r?n.createElement(y,p(p({ref:t},m),{},{components:r})):n.createElement(y,p({ref:t},m))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,p[1]=s;for(var i=2;i<a;i++)p[i]=r[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2159:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var n=r(7462),o=(r(7294),r(3905));const a={title:"Style Import Config",tags:["StyleImport","v11"],custom_props:{example_rel_path:"src/examples/V11/StyleImportConfig.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/V11/StyleImportConfig.tsx"},p="Style Import Config",s={unversionedId:"examples/V11/StyleImportConfig",id:"examples/V11/StyleImportConfig",title:"Style Import Config",description:"This example shows how to change style import configs - v11 only.",source:"@site/docs/examples/V11/StyleImportConfig.md",sourceDirName:"examples/V11",slug:"/examples/V11/StyleImportConfig",permalink:"/docs/examples/V11/StyleImportConfig",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/V11/StyleImportConfig.tsx",tags:[{label:"StyleImport",permalink:"/docs/tags/style-import"},{label:"v11",permalink:"/docs/tags/v-11"}],version:"current",frontMatter:{title:"Style Import Config",tags:["StyleImport","v11"],custom_props:{example_rel_path:"src/examples/V11/StyleImportConfig.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/V11/StyleImportConfig.tsx"},sidebar:"examplesSidebar",previous:{title:"Terrain, Sky, & Atmosphere",permalink:"/docs/examples/V10/TerrainSkyAtmosphere"}},l={},i=[],m={toc:i},c="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"style-import-config"},"Style Import Config"),(0,o.kt)("p",null,"This example shows how to change style import configs - v11 only."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport { Button } from 'react-native';\nimport { MapView, StyleImport, Camera } from '@rnmapbox/maps';\n\nconst StyleImportConfig = () => {\n  const [lightPreset, setLightPreset] = useState('night');\n  const nextLightPreset = lightPreset === 'night' ? 'day' : 'night';\n  return (\n    <>\n      <Button\n        title={`Change to ${nextLightPreset}`}\n        onPress={() => {\n          setLightPreset(nextLightPreset);\n        }}\n      />\n      <MapView\n        style={styles.mapView}\n        styleURL={'mapbox://styles/mapbox/standard-beta'}\n      >\n        <Camera\n          defaultSettings={{ centerCoordinate: [-74.00597, 40.71427] }}\n          centerCoordinate={[-74.00597, 40.71427]}\n          animationDuration={0}\n          zoomLevel={18}\n          pitch={33}\n        />\n        <StyleImport\n          id=\"basemap\"\n          existing\n          config={{\n            lightPreset: lightPreset,\n          }}\n        />\n      </MapView>\n    </>\n  );\n};\n\nconst styles = {\n  mapView: { flex: 1 },\n};\n\n\n")),(0,o.kt)("p",null,"}"))}u.isMDXComponent=!0}}]);