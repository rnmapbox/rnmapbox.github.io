"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[6826],{6607:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>m});var a=n(5893),s=n(1151);const o={title:"Set Displacement",tags:["UserLocation","UserLocation#minDisplacement"],custom_props:{example_rel_path:"UserLocation/SetDisplacement.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/UserLocation/SetDisplacement.js"},i=void 0,r={id:"examples/UserLocation/SetDisplacement",title:"Set Displacement",description:"Change the minimum displacement required to update the user location.",source:"@site/docs/examples/UserLocation/SetDisplacement.md",sourceDirName:"examples/UserLocation",slug:"/examples/UserLocation/SetDisplacement",permalink:"/docs/examples/UserLocation/SetDisplacement",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/UserLocation/SetDisplacement.js",tags:[{inline:!0,label:"UserLocation",permalink:"/docs/tags/user-location"},{inline:!0,label:"UserLocation#minDisplacement",permalink:"/docs/tags/user-location-min-displacement"}],version:"current",frontMatter:{title:"Set Displacement",tags:["UserLocation","UserLocation#minDisplacement"],custom_props:{example_rel_path:"UserLocation/SetDisplacement.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/UserLocation/SetDisplacement.js"},sidebar:"examplesSidebar",previous:{title:"Custom Native UserLocation",permalink:"/docs/examples/UserLocation/CustomNativeUserLocation"},next:{title:"Set Tint Color",permalink:"/docs/examples/UserLocation/SetTintColor"}},c={},m=[];function p(e){const t={code:"code",img:"img",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Change the minimum displacement required to update the user location."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport Mapbox, { MapView, UserLocation, Camera } from '@rnmapbox/maps';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { ButtonGroup } from '@rneui/base';\n\nconst DISPLACEMENT = [0, 5, 10];\n\nconst styles = { matchParent: { flex: 1 } };\n\nclass SetDisplacement extends React.Component {\n  state = { minDisplacement: DISPLACEMENT[0] };\n\n  componentDidMount() {\n    Mapbox.locationManager.start();\n  }\n\n  componentWillUnmount() {\n    Mapbox.locationManager.stop();\n  }\n\n  onDisplacementChange = (index) => {\n    this.setState({ minDisplacement: DISPLACEMENT[index] });\n  };\n\n  render() {\n    return (\n      <SafeAreaView style={styles.matchParent}>\n        <MapView style={styles.matchParent}>\n          <Camera\n            followZoomLevel={16}\n            followUserMode=\"compass\"\n            followUserLocation\n          />\n\n          <UserLocation minDisplacement={this.state.minDisplacement} />\n        </MapView>\n        <ButtonGroup\n          buttons={DISPLACEMENT.map((i) => `${i} meters`)}\n          selectedIndex={DISPLACEMENT.indexOf(this.state.minDisplacement)}\n          onPress={this.onDisplacementChange}\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nexport default SetDisplacement;\n\n\n"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.img,{alt:"SetDisplacement.png",src:n(2252).Z+"",width:"295",height:"640"}),"}"]})]})}function l(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},2252:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/SetDisplacement-7e7cc7ea53931751dabd22e7c6da6e76.png"},1151:(e,t,n)=>{n.d(t,{a:()=>i});var a=n(7294);const s={},o=a.createContext(s);function i(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}}}]);