"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[4885],{8480:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>m,toc:()=>i});var n=a(5893),r=a(1151);const s={title:"Image Overlay",tags:["RasterLayer","ImageSource"],custom_props:{example_rel_path:"FillRasterLayer/ImageOverlay.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/ImageOverlay.js"},o=void 0,m={id:"examples/FillRasterLayer/ImageOverlay",title:"Image Overlay",description:"}",source:"@site/docs/examples/FillRasterLayer/ImageOverlay.md",sourceDirName:"examples/FillRasterLayer",slug:"/examples/FillRasterLayer/ImageOverlay",permalink:"/docs/examples/FillRasterLayer/ImageOverlay",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/ImageOverlay.js",tags:[{inline:!0,label:"RasterLayer",permalink:"/docs/tags/raster-layer"},{inline:!0,label:"ImageSource",permalink:"/docs/tags/image-source"}],version:"current",frontMatter:{title:"Image Overlay",tags:["RasterLayer","ImageSource"],custom_props:{example_rel_path:"FillRasterLayer/ImageOverlay.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/ImageOverlay.js"},sidebar:"examplesSidebar",previous:{title:"GeoJSON Source",permalink:"/docs/examples/FillRasterLayer/GeoJSONSource"},next:{title:"Indoor Building Map",permalink:"/docs/examples/FillRasterLayer/IndoorBuilding"}},l={},i=[];function c(e){const t={code:"code",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport Mapbox from '@rnmapbox/maps';\nimport { Text } from 'react-native';\n\nimport Bubble from '../common/Bubble';\nimport sheet from '../../styles/sheet';\nimport radar0 from '../../assets/radar.png';\nimport radar1 from '../../assets/radar1.png';\nimport radar2 from '../../assets/radar2.png';\n\nconst styles = {\n  rasterLayer: { rasterOpacity: 0.6 },\n  bubble: { bottom: 100 },\n};\n\nconst frames = [radar0, radar1, radar2];\nconst coordQuads = [\n  [\n    [-80.425, 46.437], // top left\n    [-71.516, 46.437], // top right\n    [-71.516, 37.936], // bottom right\n    [-80.425, 37.936], // bottom left\n  ],\n  [\n    [-85.425, 45.437], // top left\n    [-75.516, 45.437], // top right\n    [-75.516, 36.936], // bottom right\n    [-85.425, 36.936], // bottom left\n  ],\n];\n\nclass ImageOverlay extends React.Component {\n  state = {\n    radarFrameIndex: 0,\n    coords: coordQuads[0],\n    dynamic: false,\n  };\n\n  _timeout = null;\n\n  componentDidMount() {\n    this.heartbeat();\n  }\n\n  heartbeat() {\n    this._timeout = setTimeout(() => {\n      requestAnimationFrame(() => {\n        let nextFrame = this.state.radarFrameIndex + 1;\n        if (nextFrame > 1) {\n          nextFrame = 0;\n        }\n\n        if (this.state.dynamic) {\n          this.setState({\n            radarFrameIndex: nextFrame,\n            coords: coordQuads[nextFrame],\n          });\n        } else {\n          this.setState({ radarFrameIndex: nextFrame });\n        }\n        this.heartbeat();\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  render() {\n    const bubbleText = this.state.dynamic\n      ? 'Static coordinates'\n      : 'Dynamic coordinates';\n    return (\n      <>\n        <Mapbox.MapView\n          ref={(ref) => (this.map = ref)}\n          style={sheet.matchParent}\n          styleURL={Mapbox.StyleURL.Satellite}\n        >\n          <Mapbox.Camera\n            defaultSettings={{ zoomLevel: 4, centerCoordinate: [-79, 40] }}\n          />\n\n          <Mapbox.Animated.ImageSource\n            key=\"d\"\n            id=\"radarSource\"\n            coordinates={this.state.coords}\n            url={frames[this.state.radarFrameIndex]}\n          >\n            <Mapbox.RasterLayer id=\"radarLayer\" style={styles.rasterLayer} />\n          </Mapbox.Animated.ImageSource>\n        </Mapbox.MapView>\n        <Bubble\n          onPress={() => {\n            this.setState({ dynamic: !this.state.dynamic });\n          }}\n          style={styles.bubble}\n        >\n          <Text>{bubbleText}</Text>\n        </Bubble>\n      </>\n    );\n  }\n}\n\nexport default ImageOverlay;\n\n\n"})}),"\n",(0,n.jsx)(t.p,{children:"}"})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>m,a:()=>o});var n=a(7294);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function m(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);