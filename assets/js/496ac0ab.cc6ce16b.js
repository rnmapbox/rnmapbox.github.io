"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[7774],{6007:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var s=n(5893),o=n(1151);const a={title:"Show Click",tags:["MapView#onPress"],custom_props:{example_rel_path:"Map/ShowClick.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ShowClick.js"},i=void 0,r={id:"examples/Map/ShowClick",title:"Show Click",description:"Demonstates onPress event and how to get the screen point of the click.",source:"@site/docs/examples/Map/ShowClick.md",sourceDirName:"examples/Map",slug:"/examples/Map/ShowClick",permalink:"/docs/examples/Map/ShowClick",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ShowClick.js",tags:[{inline:!0,label:"MapView#onPress",permalink:"/docs/tags/map-view-on-press"}],version:"current",frontMatter:{title:"Show Click",tags:["MapView#onPress"],custom_props:{example_rel_path:"Map/ShowClick.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ShowClick.js"},sidebar:"examplesSidebar",previous:{title:"Show and hide layer",permalink:"/docs/examples/Map/ShowAndHideLayer"},next:{title:"Show Map",permalink:"/docs/examples/Map/ShowMap"}},c={},l=[];function p(e){const t={code:"code",img:"img",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Demonstates onPress event and how to get the screen point of the click."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport { Text } from 'react-native';\nimport { MapView, Camera } from '@rnmapbox/maps';\n\nimport Bubble from '../common/Bubble';\n\nconst styles = { matchParent: { flex: 1 } };\n\nclass ShowClick extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      latitude: undefined,\n      longitude: undefined,\n      screenPointX: undefined,\n      screenPointY: undefined,\n    };\n\n    this.onPress = this.onPress.bind(this);\n  }\n\n  get hasValidLastClick() {\n    return (\n      typeof this.state.latitude === 'number' &&\n      typeof this.state.longitude === 'number'\n    );\n  }\n\n  onPress(event) {\n    const { geometry, properties } = event;\n\n    this.setState({\n      latitude: geometry.coordinates[1],\n      longitude: geometry.coordinates[0],\n      screenPointX: properties.screenPointX,\n      screenPointY: properties.screenPointY,\n    });\n  }\n\n  renderLastClicked() {\n    if (!this.hasValidLastClick) {\n      return (\n        <Bubble>\n          <Text>Click the map!</Text>\n        </Bubble>\n      );\n    }\n\n    return (\n      <Bubble testID=\"location-bubble\">\n        <Text testID=\"location-bubble-latitude\">\n          Latitude: {this.state.latitude}\n        </Text>\n        <Text testID=\"location-bubble-longitude\">\n          Longitude: {this.state.longitude}\n        </Text>\n        <Text>Screen Point X: {this.state.screenPointX}</Text>\n        <Text>Screen Point Y: {this.state.screenPointY}</Text>\n      </Bubble>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <MapView\n          style={styles.matchParent}\n          onPress={this.onPress}\n          testID={'show-click-map-view'}\n        >\n          <Camera\n            defaultSettings={{ centerCoordinate: [-77.036086, 38.910233] }}\n          />\n        </MapView>\n        {this.renderLastClicked()}\n      </>\n    );\n  }\n}\n\nexport default ShowClick;\n\n\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.img,{alt:"ShowClick.png",src:n(7820).Z+"",width:"295",height:"640"}),"}"]})]})}function m(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},7820:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/ShowClick-6c5bc8c464040bef4da0bc2d1997133d.png"},1151:(e,t,n)=>{n.d(t,{a:()=>i});var s=n(7294);const o={},a=s.createContext(o);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}}}]);