"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[8068],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>y});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),p=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(i.Provider,{value:r},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),u=a,y=m["".concat(i,".").concat(u)]||m[u]||f[u]||o;return t?n.createElement(y,l(l({ref:r},c),{},{components:t})):n.createElement(y,l({ref:r},c))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=u;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[m]="string"==typeof e?e:a,l[1]=s;for(var p=2;p<o;p++)l[p]=t[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8690:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=t(7462),a=(t(7294),t(3905));const o={title:"Change Layer Color",tags:["FillLayer#existing","FillLayer#fillColor"],custom_props:{example_rel_path:"Map/ChangeLayerColor.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ChangeLayerColor.js"},l=void 0,s={unversionedId:"examples/Map/ChangeLayerColor",id:"examples/Map/ChangeLayerColor",title:"Change Layer Color",description:"Change style of a layer part of the map on the fly.",source:"@site/docs/examples/Map/ChangeLayerColor.md",sourceDirName:"examples/Map",slug:"/examples/Map/ChangeLayerColor",permalink:"/docs/examples/Map/ChangeLayerColor",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ChangeLayerColor.js",tags:[{label:"FillLayer#existing",permalink:"/docs/tags/fill-layer-existing"},{label:"FillLayer#fillColor",permalink:"/docs/tags/fill-layer-fill-color"}],version:"current",frontMatter:{title:"Change Layer Color",tags:["FillLayer#existing","FillLayer#fillColor"],custom_props:{example_rel_path:"Map/ChangeLayerColor.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ChangeLayerColor.js"},sidebar:"examplesSidebar",previous:{title:"Watercolor Raster Tiles",permalink:"/docs/examples/FillRasterLayer/WatercolorRasterTiles"},next:{title:"Change Offline Region",permalink:"/docs/examples/Map/CreateOfflineRegion"}},i={},p=[],c={toc:p},m="wrapper";function f(e){let{components:r,...o}=e;return(0,a.kt)(m,(0,n.Z)({},c,o,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Change style of a layer part of the map on the fly."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Text } from 'react-native';\nimport { MapView, FillLayer, Camera } from '@rnmapbox/maps';\n\nimport Bubble from '../common/Bubble';\n\nconst defaultCamera = {\n  centerCoordinate: [12.338, 45.4385],\n  zoomLevel: 17.4,\n};\n\nconst styles = {\n  mapView: { flex: 1 },\n};\n\nclass ChangeLayerColor extends React.Component {\n  state = {\n    fillColor: '',\n  };\n\n  onPress = () => {\n    const fillColor = `#${Math.random().toString(16).substr(-6)}`;\n    this.setState({ fillColor });\n  };\n\n  render() {\n    const { fillColor } = this.state;\n    return (\n      <>\n        <MapView\n          ref={(c) => (this._map = c)}\n          onPress={this.onPress}\n          style={styles.mapView}\n        >\n          <Camera defaultSettings={defaultCamera} />\n          {!!fillColor && (\n            <FillLayer id=\"water\" existing style={{ fillColor }} />\n          )}\n        </MapView>\n        <Bubble onPress={this.onPress}>\n          <Text>Paint Water</Text>\n        </Bubble>\n      </>\n    );\n  }\n}\n\nexport default ChangeLayerColor;\n\n\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"ChangeLayerColor.png",src:t(9255).Z,width:"295",height:"640"}),"}"))}f.isMDXComponent=!0},9255:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/ChangeLayerColor-08217c1b39df2482f04499b90130205b.png"}}]);