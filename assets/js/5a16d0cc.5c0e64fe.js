"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[8273],{4191:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var a=t(5893),r=t(1151);const o={title:"Dynamic URL",tags:["ShapeSource#url"],custom_props:{example_rel_path:"Map/DynamicUrl.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/DynamicUrl.tsx"},s=void 0,c={id:"examples/Map/DynamicUrl",title:"Dynamic URL",description:"Change shape source URL on press of the bubble.",source:"@site/docs/examples/Map/DynamicUrl.md",sourceDirName:"examples/Map",slug:"/examples/Map/DynamicUrl",permalink:"/docs/examples/Map/DynamicUrl",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/DynamicUrl.tsx",tags:[{inline:!0,label:"ShapeSource#url",permalink:"/docs/tags/shape-source-url"}],version:"current",frontMatter:{title:"Dynamic URL",tags:["ShapeSource#url"],custom_props:{example_rel_path:"Map/DynamicUrl.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/DynamicUrl.tsx"},sidebar:"examplesSidebar",previous:{title:"Change Offline Region",permalink:"/docs/examples/Map/CreateOfflineRegion"},next:{title:"Localize Labels",permalink:"/docs/examples/Map/LocalizeLabels"}},l={},i=[];function m(e){const n={code:"code",img:"img",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Change shape source URL on press of the bubble."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import { useState } from 'react';\nimport { Text } from 'react-native';\nimport {\n  Camera,\n  FillLayer,\n  MapView,\n  ShapeSource,\n  StyleURL,\n} from '@rnmapbox/maps';\n\nimport Bubble from '../common/Bubble';\nimport { ExampleWithMetadata } from '../common/ExampleMetadata'; // exclude-from-doc\n\nconst randomCountries = [\n  {\n    id: 'FRA',\n    url: 'https://raw.githubusercontent.com/johan/world.geo.json/master/countries/FRA.geo.json',\n  },\n  {\n    id: 'GBR',\n    url: 'https://raw.githubusercontent.com/johan/world.geo.json/master/countries/GBR.geo.json',\n  },\n  {\n    id: 'ITA',\n    url: 'https://raw.githubusercontent.com/johan/world.geo.json/master/countries/ITA.geo.json',\n  },\n  {\n    id: 'BEL',\n    url: 'https://raw.githubusercontent.com/johan/world.geo.json/master/countries/BEL.geo.json',\n  },\n  {\n    id: 'ESP',\n    url: 'https://raw.githubusercontent.com/johan/world.geo.json/master/countries/ESP.geo.json',\n  },\n];\n\nconst styles = { matchParent: { flex: 1 } };\n\nconst DynamicUrl = () => {\n  const [country, setCountry] = useState(randomCountries[0]);\n\n  const handleUpdate = () => {\n    const index = Math.floor(Math.random() * randomCountries.length);\n\n    setCountry(randomCountries[index]);\n  };\n\n  return (\n    <>\n      <MapView\n        styleURL={StyleURL.Satellite}\n        style={styles.matchParent}\n        testID={'dynamic-url'}\n      >\n        <Camera\n          defaultSettings={{\n            centerCoordinate: [2.498873, 47.180817],\n            zoomLevel: 3.25,\n          }}\n        />\n\n        <ShapeSource id=\"countryShapeSource\" url={country!.url}>\n          <FillLayer\n            id=\"countryFillLayer\"\n            existing\n            style={{\n              fillColor: 'blue',\n              fillOpacity: 0.25,\n            }}\n          />\n        </ShapeSource>\n      </MapView>\n\n      <Bubble onPress={handleUpdate}>\n        <Text>Update country (active: {country!.id})</Text>\n      </Bubble>\n    </>\n  );\n};\n\nexport default DynamicUrl;\n\n\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.img,{alt:"DynamicUrl.png",src:t(8378).Z+"",width:"295",height:"640"}),"}"]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},8378:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/DynamicUrl-0b4b043953abe7eadc197d876f7895de.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var a=t(7294);const r={},o=a.createContext(r);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);