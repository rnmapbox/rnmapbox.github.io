"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[3027],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=l(n),f=o,y=c["".concat(i,".").concat(f)]||c[f]||u[f]||a;return n?r.createElement(y,s(s({ref:t},m),{},{components:n})):r.createElement(y,s({ref:t},m))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=f;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[c]="string"==typeof e?e:o,s[1]=p;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2159:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={title:"Style Import Config",tags:["StyleImport","v11"],custom_props:{example_rel_path:"src/examples/V11/StyleImportConfig.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/V11/StyleImportConfig.tsx"},s="Style Import Config",p={unversionedId:"examples/V11/StyleImportConfig",id:"examples/V11/StyleImportConfig",title:"Style Import Config",description:"This example shows how to change style import configs - v11 only.",source:"@site/docs/examples/V11/StyleImportConfig.md",sourceDirName:"examples/V11",slug:"/examples/V11/StyleImportConfig",permalink:"/docs/examples/V11/StyleImportConfig",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/V11/StyleImportConfig.tsx",tags:[{label:"StyleImport",permalink:"/docs/tags/style-import"},{label:"v11",permalink:"/docs/tags/v-11"}],version:"current",frontMatter:{title:"Style Import Config",tags:["StyleImport","v11"],custom_props:{example_rel_path:"src/examples/V11/StyleImportConfig.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/V11/StyleImportConfig.tsx"},sidebar:"examplesSidebar",previous:{title:"User Location Updates",permalink:"/docs/examples/UserLocation/UserLocationUpdates"}},i={},l=[],m={toc:l},c="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"style-import-config"},"Style Import Config"),(0,o.kt)("p",null,"This example shows how to change style import configs - v11 only."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import React, { useState } from 'react';\nimport { Button } from 'react-native';\nimport { MapView, StyleImport, Camera } from '@rnmapbox/maps';\n\nconst StyleImportConfig = () => {\n  const [lightPreset, setLightPreset] = useState('night');\n  const nextLightPreset = lightPreset === 'night' ? 'day' : 'night';\n  return (\n    <>\n      <Button\n        title={`Change to ${nextLightPreset}`}\n        onPress={() => {\n          setLightPreset(nextLightPreset);\n        }}\n      />\n      <MapView\n        style={styles.mapView}\n        styleURL={'mapbox://styles/mapbox/standard-beta'}\n      >\n        <Camera\n          defaultSettings={{ centerCoordinate: [-74.00597, 40.71427] }}\n          centerCoordinate={[-74.00597, 40.71427]}\n          animationDuration={0}\n          zoomLevel={18}\n          pitch={33}\n        />\n        <StyleImport\n          id=\"basemap\"\n          existing\n          config={{\n            lightPreset: lightPreset,\n          }}\n        />\n      </MapView>\n    </>\n  );\n};\n\nconst styles = {\n  mapView: { flex: 1 },\n};\n\n\n")),(0,o.kt)("p",null,"}"))}u.isMDXComponent=!0}}]);