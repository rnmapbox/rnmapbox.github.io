"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[1605],{3905:(e,r,t)=>{t.d(r,{Zo:()=>i,kt:()=>f});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),c=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},i=function(e){var r=c(e.components);return n.createElement(p.Provider,{value:r},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),m=c(t),y=a,f=m["".concat(p,".").concat(y)]||m[y]||u[y]||o;return t?n.createElement(f,l(l({ref:r},i),{},{components:t})):n.createElement(f,l({ref:r},i))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=y;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s[m]="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},5305:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={title:"GeoJSON Source",tags:[],custom_props:{example_rel_path:"FillRasterLayer/GeoJSONSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/GeoJSONSource.js"},l=void 0,s={unversionedId:"examples/FillRasterLayer/GeoJSONSource",id:"examples/FillRasterLayer/GeoJSONSource",title:"GeoJSON Source",description:"GeoJSONSource.png}",source:"@site/docs/examples/FillRasterLayer/GeoJSONSource.md",sourceDirName:"examples/FillRasterLayer",slug:"/examples/FillRasterLayer/GeoJSONSource",permalink:"/docs/examples/FillRasterLayer/GeoJSONSource",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/GeoJSONSource.js",tags:[],version:"current",frontMatter:{title:"GeoJSON Source",tags:[],custom_props:{example_rel_path:"FillRasterLayer/GeoJSONSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/GeoJSONSource.js"},sidebar:"examplesSidebar",previous:{title:"Custom Vector Source",permalink:"/docs/examples/FillRasterLayer/CustomVectorSource"},next:{title:"Image Overlay",permalink:"/docs/examples/FillRasterLayer/ImageOverlay"}},p={},c=[],i={toc:c},m="wrapper";function u(e){let{components:r,...o}=e;return(0,a.kt)(m,(0,n.Z)({},i,o,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport MapboxGL from '@rnmapbox/maps';\n\nimport sheet from '../../styles/sheet';\nimport gridPattern from '../../assets/grid_pattern.png';\nimport smileyFaceGeoJSON from '../../assets/smiley_face.json';\nimport BaseExamplePropTypes from '../common/BaseExamplePropTypes';\nimport Page from '../common/Page';\n\nconst layerStyles = {\n  background: {\n    backgroundPattern: gridPattern,\n  },\n  smileyFace: {\n    fillAntialias: true,\n    fillColor: 'white',\n    fillOutlineColor: 'rgba(255, 255, 255, 0.84)',\n  },\n};\n\nclass GeoJSONSource extends React.Component {\n  static propTypes = {\n    ...BaseExamplePropTypes,\n  };\n\n  render() {\n    return (\n      <Page {...this.props}>\n        <MapboxGL.MapView\n          ref={(ref) => (this.map = ref)}\n          style={sheet.matchParent}\n          styleURL={MapboxGL.StyleURL.Dark}\n        >\n          <MapboxGL.Camera\n            zoomLevel={2}\n            centerCoordinate={[-35.15165038, 40.6235728]}\n          />\n\n          <MapboxGL.VectorSource>\n            <MapboxGL.BackgroundLayer\n              id=\"background\"\n              style={layerStyles.background}\n            />\n          </MapboxGL.VectorSource>\n\n          <MapboxGL.ShapeSource id=\"smileyFaceSource\" shape={smileyFaceGeoJSON}>\n            <MapboxGL.FillLayer\n              id=\"smileyFaceFill\"\n              style={layerStyles.smileyFace}\n            />\n          </MapboxGL.ShapeSource>\n        </MapboxGL.MapView>\n      </Page>\n    );\n  }\n}\n\nexport default GeoJSONSource;\n\n\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"GeoJSONSource.png",src:t(5869).Z,width:"295",height:"640"}),"}"))}u.isMDXComponent=!0},5869:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/GeoJSONSource-424d2b28eda58e5e0f8d25a20438a7f2.png"}}]);