"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[814],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>d});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(t),y=a,d=u["".concat(l,".").concat(y)]||u[y]||m[y]||o;return t?n.createElement(d,c(c({ref:r},p),{},{components:t})):n.createElement(d,c({ref:r},p))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=y;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[u]="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=t[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},327:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=t(7462),a=(t(7294),t(3905));const o={title:"Third Party Vector Source",tags:["VectorSource","VectorSource#tileUrlTemplates"],custom_props:{example_rel_path:"LineLayer/ThirdPartyVectorSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/LineLayer/ThirdPartyVectorSource.js"},c=void 0,i={unversionedId:"examples/LineLayer/ThirdPartyVectorSource",id:"examples/LineLayer/ThirdPartyVectorSource",title:"Third Party Vector Source",description:"This example renders vector tiles using a third party vector tile source.",source:"@site/docs/examples/LineLayer/ThirdPartyVectorSource.md",sourceDirName:"examples/LineLayer",slug:"/examples/LineLayer/ThirdPartyVectorSource",permalink:"/docs/examples/LineLayer/ThirdPartyVectorSource",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/LineLayer/ThirdPartyVectorSource.js",tags:[{label:"VectorSource",permalink:"/docs/tags/vector-source"},{label:"VectorSource#tileUrlTemplates",permalink:"/docs/tags/vector-source-tile-url-templates"}],version:"current",frontMatter:{title:"Third Party Vector Source",tags:["VectorSource","VectorSource#tileUrlTemplates"],custom_props:{example_rel_path:"LineLayer/ThirdPartyVectorSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/LineLayer/ThirdPartyVectorSource.js"},sidebar:"examplesSidebar",previous:{title:"Gradient Line",permalink:"/docs/examples/LineLayer/GradientLine"},next:{title:"Change Layer Color",permalink:"/docs/examples/Map/ChangeLayerColor"}},l={},s=[],p={toc:s},u="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This example renders vector tiles using a third party vector tile source."),(0,a.kt)("p",null,"In this case, Mapillary provides the vector tiles, which are added to the map using VectorSource."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { MapView, Camera, VectorSource, LineLayer } from '@rnmapbox/maps';\n\nconst styles = {\n  mapView: { flex: 1 },\n  lineLayer: {\n    lineCap: 'round',\n    lineJoin: 'round',\n    lineOpacity: 0.6,\n    lineColor: 'rgb(53, 175, 109)',\n    lineWidth: 2.0,\n  },\n};\n\nconst defaultCameraSettings = {\n  centerCoordinate: [-87.622088, 41.878781],\n  zoomLevel: 10,\n};\n\nconst tileUrlTemplates = [\n  'https://tiles.mapillary.com/maps/vtp/mly1_public/2/{z}/{x}/{y}?access_token=MLY|4142433049200173|72206abe5035850d6743b23a49c41333'.replaceAll(\n    '|',\n    '%7C',\n  ),\n];\n\nfunction ThirdPartyVectorSource() {\n  return (\n    <>\n      <MapView style={styles.mapView}>\n        <Camera defaultSettings={defaultCameraSettings} />\n        <VectorSource id=\"mapillary\" tileUrlTemplates={tileUrlTemplates}>\n          <LineLayer\n            id=\"mapillary-lines\"\n            sourceLayerID=\"sequence\"\n            style={styles.lineLayer}\n          />\n        </VectorSource>\n      </MapView>\n    </>\n  );\n}\n\nexport default ThirdPartyVectorSource;\n\n")),(0,a.kt)("p",null,"}"))}m.isMDXComponent=!0}}]);