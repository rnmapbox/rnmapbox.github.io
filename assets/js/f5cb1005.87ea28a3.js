"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[973],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,y=d["".concat(i,".").concat(m)]||d[m]||u[m]||l;return r?n.createElement(y,o(o({ref:t},c),{},{components:r})):n.createElement(y,o({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<l;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4663:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const l={custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/components/ModelLayer.tsx"},o=void 0,s={unversionedId:"components/ModelLayer",id:"components/ModelLayer",title:"ModelLayer",description:"Mapbox spec: model",source:"@site/docs/components/ModelLayer.md",sourceDirName:"components",slug:"/components/ModelLayer",permalink:"/docs/components/ModelLayer",draft:!1,editUrl:"https://github.com/rnmapbox/maps/blob/main/src/components/ModelLayer.tsx",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/components/ModelLayer.tsx"},sidebar:"componentSidebar",previous:{title:"MarkerView",permalink:"/docs/components/MarkerView"},next:{title:"Models",permalink:"/docs/components/Models"}},i={},p=[{value:"props",id:"props",level:2},{value:"id",id:"id",level:3},{value:"existing",id:"existing",level:3},{value:"sourceID",id:"sourceid",level:3},{value:"sourceLayerID",id:"sourcelayerid",level:3},{value:"aboveLayerID",id:"abovelayerid",level:3},{value:"belowLayerID",id:"belowlayerid",level:3},{value:"layerIndex",id:"layerindex",level:3},{value:"filter",id:"filter",level:3},{value:"minZoomLevel",id:"minzoomlevel",level:3},{value:"maxZoomLevel",id:"maxzoomlevel",level:3},{value:"slot",id:"slot",level:3},{value:"style",id:"style",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"  Mapbox spec: ",(0,a.kt)("a",{parentName:"p",href:"https://docs.mapbox.com/mapbox-gl-js/style-spec/layers/#model"},"model")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { ModelLayer } from '@rnmapbox/maps';\n\nModelLayer\n\n")),(0,a.kt)("p",null,"ModelLayer is a style layer that renders one or more stroked polylines on the map."),(0,a.kt)("h2",{id:"props"},"props"),(0,a.kt)("h3",{id:"id"},"id"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"string\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"required"),"\nA string that uniquely identifies the source in the style to which it is added."),(0,a.kt)("h3",{id:"existing"},"existing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"boolean\n")),(0,a.kt)("p",null,"The id refers to en existing layer in the style. Does not create a new layer."),(0,a.kt)("h3",{id:"sourceid"},"sourceID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"string\n")),(0,a.kt)("p",null,"The source from which to obtain the data to style.\nIf the source has not yet been added to the current style, the behavior is undefined.\nInferred from parent source only if the layer is a direct child to it."),(0,a.kt)("p",null,"  ",(0,a.kt)("em",{parentName:"p"},"defaults to:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Mapbox.StyleSource.DefaultSourceID")),(0,a.kt)("h3",{id:"sourcelayerid"},"sourceLayerID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"string\n")),(0,a.kt)("p",null,"Identifier of the layer within the source identified by the sourceID property from which the receiver obtains the data to style."),(0,a.kt)("h3",{id:"abovelayerid"},"aboveLayerID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"string\n")),(0,a.kt)("p",null,"Inserts a layer above aboveLayerID."),(0,a.kt)("h3",{id:"belowlayerid"},"belowLayerID"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"string\n")),(0,a.kt)("p",null,"Inserts a layer below belowLayerID"),(0,a.kt)("h3",{id:"layerindex"},"layerIndex"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,a.kt)("p",null,"Inserts a layer at a specified index"),(0,a.kt)("h3",{id:"filter"},"filter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"FilterExpression\n")),(0,a.kt)("p",null,"Filter only the features in the source layer that satisfy a condition that you define"),(0,a.kt)("h3",{id:"minzoomlevel"},"minZoomLevel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,a.kt)("p",null,"The minimum zoom level at which the layer gets parsed and appears."),(0,a.kt)("h3",{id:"maxzoomlevel"},"maxZoomLevel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,a.kt)("p",null,"The maximum zoom level at which the layer gets parsed and appears."),(0,a.kt)("h3",{id:"slot"},"slot"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"'bottom' | 'middle' | 'top'\n")),(0,a.kt)("p",null,"The slot this layer is assigned to. If specified, and a slot with that name exists, it will be placed at that position in the layer order."),(0,a.kt)("p",null,"v11 only"),(0,a.kt)("h3",{id:"style"},"style"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"ModelLayerStyleProps\n")),(0,a.kt)("p",null,"Customizable style attributes"))}u.isMDXComponent=!0}}]);