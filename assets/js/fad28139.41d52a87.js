"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[690],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),u=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(i.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(n),y=a,d=m["".concat(i,".").concat(y)]||m[y]||c[y]||r;return n?o.createElement(d,l(l({ref:t},p),{},{components:n})):o.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=y;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[m]="string"==typeof e?e:a,l[1]=s;for(var u=2;u<r;u++)l[u]=n[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}y.displayName="MDXCreateElement"},1788:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var o=n(7462),a=(n(7294),n(3905));const r={title:"Custom Callout",tags:["MarkerView"],custom_props:{example_rel_path:"Annotations/CustomCallout.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/CustomCallout.tsx"},l=void 0,s={unversionedId:"examples/Annotations/CustomCallout",id:"examples/Annotations/CustomCallout",title:"Custom Callout",description:"Use MarkerView to create a custom callout.",source:"@site/docs/examples/Annotations/CustomCallout.md",sourceDirName:"examples/Annotations",slug:"/examples/Annotations/CustomCallout",permalink:"/docs/examples/Annotations/CustomCallout",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/CustomCallout.tsx",tags:[{label:"MarkerView",permalink:"/docs/tags/marker-view"}],version:"current",frontMatter:{title:"Custom Callout",tags:["MarkerView"],custom_props:{example_rel_path:"Annotations/CustomCallout.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/CustomCallout.tsx"},sidebar:"examplesSidebar",previous:{title:"Introduction",permalink:"/docs/examples/"},next:{title:"Heatmap",permalink:"/docs/examples/Annotations/Heatmap"}},i={},u=[],p={toc:u},m="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Use MarkerView to create a custom callout."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import Mapbox, { type SymbolLayerStyle } from '@rnmapbox/maps';\nimport { Feature } from '@turf/helpers';\nimport React, { useState } from 'react';\nimport { StyleProp, Text, TextStyle, View, ViewStyle } from 'react-native';\n\nimport exampleIcon from '../../assets/pin.png';\nimport sheet from '../../styles/sheet';\nimport { ExampleWithMetadata } from '../common/ExampleMetadata'; // exclude-from-doc\n\nconst defaultCamera = {\n  centerCoordinate: [12.338, 45.4385],\n  zoomLevel: 17.4,\n};\n\nconst featureCollection: GeoJSON.FeatureCollection<GeoJSON.Geometry> = {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      id: '9d10456e-bdda-4aa9-9269-04c1667d4552',\n      properties: {\n        icon: 'example',\n        message: 'Hello!',\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [12.338, 45.4385],\n      },\n    },\n  ],\n};\n\ntype CustomCalloutViewProps = {\n  message: string;\n};\n\nconst CustomCalloutView = ({ message }: CustomCalloutViewProps) => {\n  return (\n    <View style={styles.calloutContainerStyle}>\n      <Text style={styles.customCalloutText}>{message}</Text>\n    </View>\n  );\n};\n\nconst CustomCallout = () => {\n  const [selectedFeature, setSelectedFeature] =\n    useState<GeoJSON.Feature<GeoJSON.Point>>();\n\n  const onPinPress = (e: { features: Array<GeoJSON.Feature> }): void => {\n    if (selectedFeature) {\n      setSelectedFeature(undefined);\n      return;\n    }\n\n    const feature = e?.features[0] as Feature<GeoJSON.Point>;\n    setSelectedFeature(feature);\n  };\n\n  return (\n    <Mapbox.MapView style={sheet.matchParent}>\n      <Mapbox.Camera defaultSettings={defaultCamera} />\n      <Mapbox.Images images={{ exampleIcon }} />\n      <Mapbox.ShapeSource\n        id=\"mapPinsSource\"\n        shape={featureCollection}\n        onPress={onPinPress}\n      >\n        <Mapbox.SymbolLayer id=\"mapPinsLayer\" style={styles.mapPinLayer} />\n      </Mapbox.ShapeSource>\n      {selectedFeature && (\n        <Mapbox.MarkerView coordinate={selectedFeature.geometry.coordinates}>\n          <CustomCalloutView message={selectedFeature?.properties?.message} />\n        </Mapbox.MarkerView>\n      )}\n    </Mapbox.MapView>\n  );\n};\n\nconst styles: {\n  matchParent: StyleProp<ViewStyle>;\n  mapPinLayer: SymbolLayerStyle;\n  customCalloutText: StyleProp<TextStyle>;\n  calloutContainerStyle: StyleProp<ViewStyle>;\n} = {\n  matchParent: {\n    flex: 1,\n  },\n  mapPinLayer: {\n    iconAllowOverlap: true,\n    iconAnchor: 'bottom',\n    iconSize: 1.0,\n    iconImage: 'exampleIcon',\n  },\n  customCalloutText: {\n    color: 'black',\n    fontSize: 16,\n  },\n  calloutContainerStyle: {\n    backgroundColor: 'white',\n    width: 60,\n    height: 40,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n};\n\nexport default CustomCallout;\n\n\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"CustomCallout.png",src:n(8993).Z,width:"295",height:"640"}),"}"))}c.isMDXComponent=!0},8993:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/CustomCallout-58080311cf2753bea9b96a5582255779.png"}}]);