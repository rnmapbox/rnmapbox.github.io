"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[6826],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6335:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={title:"Set Displacement",tags:["UserLocation","UserLocation#minDisplacement"],custom_props:{example_rel_path:"UserLocation/SetDisplacement.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/UserLocation/SetDisplacement.js"},s=void 0,i={unversionedId:"examples/UserLocation/SetDisplacement",id:"examples/UserLocation/SetDisplacement",title:"Set Displacement",description:"Change the minimum displacement required to update the user location.",source:"@site/docs/examples/UserLocation/SetDisplacement.md",sourceDirName:"examples/UserLocation",slug:"/examples/UserLocation/SetDisplacement",permalink:"/docs/examples/UserLocation/SetDisplacement",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/UserLocation/SetDisplacement.js",tags:[{label:"UserLocation",permalink:"/docs/tags/user-location"},{label:"UserLocation#minDisplacement",permalink:"/docs/tags/user-location-min-displacement"}],version:"current",frontMatter:{title:"Set Displacement",tags:["UserLocation","UserLocation#minDisplacement"],custom_props:{example_rel_path:"UserLocation/SetDisplacement.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/UserLocation/SetDisplacement.js"},sidebar:"examplesSidebar",previous:{title:"Custom Native UserLocation",permalink:"/docs/examples/UserLocation/CustomNativeUserLocation"},next:{title:"Set Tint Color",permalink:"/docs/examples/UserLocation/SetTintColor"}},c={},p=[],l={toc:p},m="wrapper";function u(e){let{components:t,...o}=e;return(0,a.kt)(m,(0,r.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Change the minimum displacement required to update the user location."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Mapbox, { MapView, UserLocation, Camera } from '@rnmapbox/maps';\nimport { SafeAreaView } from 'react-native';\nimport { ButtonGroup } from '@rneui/base';\n\nconst DISPLACEMENT = [0, 5, 10];\n\nconst styles = { matchParent: { flex: 1 } };\n\nclass SetDisplacement extends React.Component {\n  state = { minDisplacement: DISPLACEMENT[0] };\n\n  componentDidMount() {\n    Mapbox.locationManager.start();\n  }\n\n  componentWillUnmount() {\n    Mapbox.locationManager.stop();\n  }\n\n  onDisplacementChange = (index) => {\n    this.setState({ minDisplacement: DISPLACEMENT[index] });\n  };\n\n  render() {\n    return (\n      <SafeAreaView style={styles.matchParent}>\n        <MapView style={styles.matchParent}>\n          <Camera\n            followZoomLevel={16}\n            followUserMode=\"compass\"\n            followUserLocation\n          />\n\n          <UserLocation minDisplacement={this.state.minDisplacement} />\n        </MapView>\n        <ButtonGroup\n          buttons={DISPLACEMENT.map((i) => `${i} meters`)}\n          selectedIndex={DISPLACEMENT.indexOf(this.state.minDisplacement)}\n          onPress={this.onDisplacementChange}\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nexport default SetDisplacement;\n\n\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"SetDisplacement.png",src:n(2252).Z,width:"295",height:"640"}),"}"))}u.isMDXComponent=!0},2252:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/SetDisplacement-4e8b993a96d63929e42a936b2fc0a818.png"}}]);