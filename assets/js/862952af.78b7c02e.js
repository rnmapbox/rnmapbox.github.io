"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[4290],{2886:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>m,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=o(5893),a=o(1151);const s={title:"Custom Icon",tags:["ShapeSource","ShapeSource#onPress","SymbolLayer","Images","SymbolLayer#iconImage"],custom_props:{example_rel_path:"SymbolCircleLayer/CustomIcon.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/SymbolCircleLayer/CustomIcon.tsx"},r=void 0,l={id:"examples/SymbolCircleLayer/CustomIcon",title:"Custom Icon",description:"Renders a symbol layer with custom icon defined using the Images component. Clicking a location on a map add a new icon.",source:"@site/docs/examples/SymbolCircleLayer/CustomIcon.md",sourceDirName:"examples/SymbolCircleLayer",slug:"/examples/SymbolCircleLayer/CustomIcon",permalink:"/docs/examples/SymbolCircleLayer/CustomIcon",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/SymbolCircleLayer/CustomIcon.tsx",tags:[{inline:!0,label:"ShapeSource",permalink:"/docs/tags/shape-source"},{inline:!0,label:"ShapeSource#onPress",permalink:"/docs/tags/shape-source-on-press"},{inline:!0,label:"SymbolLayer",permalink:"/docs/tags/symbol-layer"},{inline:!0,label:"Images",permalink:"/docs/tags/images"},{inline:!0,label:"SymbolLayer#iconImage",permalink:"/docs/tags/symbol-layer-icon-image"}],version:"current",frontMatter:{title:"Custom Icon",tags:["ShapeSource","ShapeSource#onPress","SymbolLayer","Images","SymbolLayer#iconImage"],custom_props:{example_rel_path:"SymbolCircleLayer/CustomIcon.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/SymbolCircleLayer/CustomIcon.tsx"},sidebar:"examplesSidebar",previous:{title:"Two Map Views",permalink:"/docs/examples/Map/TwoByTwo"},next:{title:"Custom Icon Native Asset",permalink:"/docs/examples/SymbolCircleLayer/CustomIconNativeAsset"}},m={},c=[];function i(e){const n={code:"code",img:"img",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Renders a symbol layer with custom icon defined using the Images component. Clicking a location on a map add a new icon."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import React, { useRef, memo, useState } from 'react';\nimport { Text } from 'react-native';\nimport MapboxGL, {\n  MapView,\n  Camera,\n  ShapeSource,\n  SymbolLayer,\n  Images,\n} from '@rnmapbox/maps';\nimport { featureCollection, feature, point } from '@turf/helpers';\n\nimport Bubble from '../common/Bubble';\nimport type { ExampleWithMetadata } from '../common/ExampleMetadata';\nimport exampleIcon from '../../assets/example.png';\n\nconst styles = {\n  icon: {\n    iconImage: 'icon',\n    iconAllowOverlap: true,\n  },\n};\n\nconst CustomIcon = memo(() => {\n  const cameraRef = useRef<Camera>(null);\n  const [stateFeatureCollection, setStateFeatureCollection] =\n    useState<GeoJSON.FeatureCollection>(\n      featureCollection([point([-73.970895, 40.723279])]),\n    );\n\n  const onPress = (e: GeoJSON.Feature) => {\n    const aFeature = feature(e.geometry);\n    aFeature.id = `${Date.now()}`;\n\n    setStateFeatureCollection(\n      featureCollection([...stateFeatureCollection.features, aFeature]),\n    );\n  };\n\n  const onSourceLayerPress = (e: any) => {\n    console.log(\n      'You pressed a layer here are your features:',\n      e.features,\n      e.coordinates,\n      e.point,\n    );\n  };\n\n  return (\n    <>\n      <MapView\n        style={{ flex: 1 }}\n        styleURL={MapboxGL.StyleURL.Light}\n        onPress={onPress}\n      >\n        <Camera\n          ref={cameraRef}\n          defaultSettings={{\n            zoomLevel: 9,\n            centerCoordinate: [-73.970895, 40.723279],\n          }}\n        />\n        <ShapeSource\n          id=\"symbolLocationSource\"\n          hitbox={{ width: 20, height: 20 }}\n          onPress={(e) => onSourceLayerPress(e)}\n          shape={stateFeatureCollection}\n        >\n          <SymbolLayer\n            id=\"symbolLocationSymbols\"\n            minZoomLevel={1}\n            style={styles.icon}\n          />\n          <Images images={{ icon: exampleIcon }} />\n        </ShapeSource>\n      </MapView>\n      <Bubble>\n        <Text>Tap on Map to add an icon</Text>\n      </Bubble>\n    </>\n  );\n});\n\nexport default CustomIcon;\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{alt:"CustomIcon.png",src:o(7951).Z+"",width:"295",height:"640"}),"}"]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},7951:(e,n,o)=>{o.d(n,{Z:()=>t});const t=o.p+"assets/images/CustomIcon-db03a359d7fed47b71257cfff01bb353.png"},1151:(e,n,o)=>{o.d(n,{a:()=>r});var t=o(7294);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}}}]);