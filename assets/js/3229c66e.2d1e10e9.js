"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[3027],{7616:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>m});var o=n(5893),s=n(1151);const r={title:"Style Import Config",tags:["StyleImport","v11"],custom_props:{example_rel_path:"src/examples/V11/StyleImportConfig.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/V11/StyleImportConfig.tsx"},a="Style Import Config",i={id:"examples/V11/StyleImportConfig",title:"Style Import Config",description:"This example shows how to change style import configs - v11 only.",source:"@site/docs/examples/V11/StyleImportConfig.md",sourceDirName:"examples/V11",slug:"/examples/V11/StyleImportConfig",permalink:"/docs/examples/V11/StyleImportConfig",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/V11/StyleImportConfig.tsx",tags:[{label:"StyleImport",permalink:"/docs/tags/style-import"},{label:"v11",permalink:"/docs/tags/v-11"}],version:"current",frontMatter:{title:"Style Import Config",tags:["StyleImport","v11"],custom_props:{example_rel_path:"src/examples/V11/StyleImportConfig.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/V11/StyleImportConfig.tsx"},sidebar:"examplesSidebar",previous:{title:"Terrain, Sky, & Atmosphere",permalink:"/docs/examples/V10/TerrainSkyAtmosphere"}},p={},m=[];function l(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"style-import-config",children:"Style Import Config"}),"\n",(0,o.jsx)(t.p,{children:"This example shows how to change style import configs - v11 only."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import React, { useState } from 'react';\nimport { Button } from 'react-native';\nimport { MapView, StyleImport, Camera } from '@rnmapbox/maps';\n\nconst StyleImportConfig = () => {\n  const [lightPreset, setLightPreset] = useState('night');\n  const nextLightPreset = lightPreset === 'night' ? 'day' : 'night';\n  return (\n    <>\n      <Button\n        title={`Change to ${nextLightPreset}`}\n        onPress={() => {\n          setLightPreset(nextLightPreset);\n        }}\n      />\n      <MapView\n        style={styles.mapView}\n        styleURL={'mapbox://styles/mapbox/standard-beta'}\n      >\n        <Camera\n          defaultSettings={{ centerCoordinate: [-74.00597, 40.71427] }}\n          centerCoordinate={[-74.00597, 40.71427]}\n          animationDuration={0}\n          zoomLevel={18}\n          pitch={33}\n        />\n        <StyleImport\n          id=\"basemap\"\n          existing\n          config={{\n            lightPreset: lightPreset,\n          }}\n        />\n      </MapView>\n    </>\n  );\n};\n\nconst styles = {\n  mapView: { flex: 1 },\n};\n\n\n"})}),"\n",(0,o.jsx)(t.p,{children:"}"})]})}function c(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>a});var o=n(7294);const s={},r=o.createContext(s);function a(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);