"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[4885],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var m=a.createContext({}),i=function(e){var t=a.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=i(e.components);return a.createElement(m.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=i(r),d=n,y=c["".concat(m,".").concat(d)]||c[d]||u[d]||o;return r?a.createElement(y,s(s({ref:t},p),{},{components:r})):a.createElement(y,s({ref:t},p))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[c]="string"==typeof e?e:n,s[1]=l;for(var i=2;i<o;i++)s[i]=r[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7519:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var a=r(7462),n=(r(7294),r(3905));const o={title:"Image Overlay",tags:["RasterLayer","ImageSource"],custom_props:{example_rel_path:"FillRasterLayer/ImageOverlay.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/ImageOverlay.js"},s=void 0,l={unversionedId:"examples/FillRasterLayer/ImageOverlay",id:"examples/FillRasterLayer/ImageOverlay",title:"Image Overlay",description:"ImageOverlay.png}",source:"@site/docs/examples/FillRasterLayer/ImageOverlay.md",sourceDirName:"examples/FillRasterLayer",slug:"/examples/FillRasterLayer/ImageOverlay",permalink:"/docs/examples/FillRasterLayer/ImageOverlay",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/ImageOverlay.js",tags:[{label:"RasterLayer",permalink:"/docs/tags/raster-layer"},{label:"ImageSource",permalink:"/docs/tags/image-source"}],version:"current",frontMatter:{title:"Image Overlay",tags:["RasterLayer","ImageSource"],custom_props:{example_rel_path:"FillRasterLayer/ImageOverlay.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/ImageOverlay.js"},sidebar:"examplesSidebar",previous:{title:"GeoJSON Source",permalink:"/docs/examples/FillRasterLayer/GeoJSONSource"},next:{title:"Indoor Building Map",permalink:"/docs/examples/FillRasterLayer/IndoorBuilding"}},m={},i=[],p={toc:i},c="wrapper";function u(e){let{components:t,...o}=e;return(0,n.kt)(c,(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Mapbox from '@rnmapbox/maps';\nimport { Text } from 'react-native';\n\nimport Bubble from '../common/Bubble';\nimport sheet from '../../styles/sheet';\nimport radar0 from '../../assets/radar.png';\nimport radar1 from '../../assets/radar1.png';\nimport radar2 from '../../assets/radar2.png';\n\nconst styles = {\n  rasterLayer: { rasterOpacity: 0.6 },\n  bubble: { bottom: 100 },\n};\n\nconst frames = [radar0, radar1, radar2];\nconst coordQuads = [\n  [\n    [-80.425, 46.437], // top left\n    [-71.516, 46.437], // top right\n    [-71.516, 37.936], // bottom right\n    [-80.425, 37.936], // bottom left\n  ],\n  [\n    [-85.425, 45.437], // top left\n    [-75.516, 45.437], // top right\n    [-75.516, 36.936], // bottom right\n    [-85.425, 36.936], // bottom left\n  ],\n];\n\nclass ImageOverlay extends React.Component {\n  state = {\n    radarFrameIndex: 0,\n    coords: coordQuads[0],\n    dynamic: false,\n  };\n\n  _timeout = null;\n\n  componentDidMount() {\n    this.heartbeat();\n  }\n\n  heartbeat() {\n    this._timeout = setTimeout(() => {\n      requestAnimationFrame(() => {\n        let nextFrame = this.state.radarFrameIndex + 1;\n        if (nextFrame > 1) {\n          nextFrame = 0;\n        }\n\n        if (this.state.dynamic) {\n          this.setState({\n            radarFrameIndex: nextFrame,\n            coords: coordQuads[nextFrame],\n          });\n        } else {\n          this.setState({ radarFrameIndex: nextFrame });\n        }\n        this.heartbeat();\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  render() {\n    const bubbleText = this.state.dynamic\n      ? 'Static coordinates'\n      : 'Dynamic coordinates';\n    return (\n      <>\n        <Mapbox.MapView\n          ref={(ref) => (this.map = ref)}\n          style={sheet.matchParent}\n          styleURL={Mapbox.StyleURL.Satellite}\n        >\n          <Mapbox.Camera\n            defaultSettings={{ zoomLevel: 4, centerCoordinate: [-79, 40] }}\n          />\n\n          <Mapbox.Animated.ImageSource\n            key=\"d\"\n            id=\"radarSource\"\n            coordinates={this.state.coords}\n            url={frames[this.state.radarFrameIndex]}\n          >\n            <Mapbox.RasterLayer id=\"radarLayer\" style={styles.rasterLayer} />\n          </Mapbox.Animated.ImageSource>\n        </Mapbox.MapView>\n        <Bubble\n          onPress={() => {\n            this.setState({ dynamic: !this.state.dynamic });\n          }}\n          style={styles.bubble}\n        >\n          <Text>{bubbleText}</Text>\n        </Bubble>\n      </>\n    );\n  }\n}\n\nexport default ImageOverlay;\n\n\n")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"ImageOverlay.png",src:r(2629).Z,width:"295",height:"640"}),"}"))}u.isMDXComponent=!0},2629:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/ImageOverlay-a7f144ed2e3f9d2691de31b06d95a8bb.png"}}]);