"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[9367],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3740:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const l={custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/components/VectorSource.tsx"},o=void 0,i={unversionedId:"components/VectorSource",id:"components/VectorSource",title:"VectorSource",description:"VectorSource is a map content source that supplies tiled vector data in Mapbox Vector Tile format to be shown on the map.",source:"@site/docs/components/VectorSource.md",sourceDirName:"components",slug:"/components/VectorSource",permalink:"/docs/components/VectorSource",draft:!1,editUrl:"https://github.com/rnmapbox/maps/blob/main/src/components/VectorSource.tsx",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/components/VectorSource.tsx"},sidebar:"componentSidebar",previous:{title:"UserLocation",permalink:"/docs/components/UserLocation"},next:{title:"coordinates",permalink:"/docs/components/coordinates"}},s={},p=[{value:"props",id:"props",level:2},{value:"id",id:"id",level:3},{value:"existing",id:"existing",level:3},{value:"url",id:"url",level:3},{value:"tileUrlTemplates",id:"tileurltemplates",level:3},{value:"minZoomLevel",id:"minzoomlevel",level:3},{value:"maxZoomLevel",id:"maxzoomlevel",level:3},{value:"tms",id:"tms",level:3},{value:"attribution",id:"attribution",level:3},{value:"onPress",id:"onpress",level:3},{value:"hitbox",id:"hitbox",level:3},{value:"children",id:"children",level:3},{value:"methods",id:"methods",level:2},{value:"features(layerIDs)",id:"featureslayerids",level:3},{value:"arguments",id:"arguments",level:4},{value:"onPress(event)",id:"onpressevent",level:3},{value:"arguments",id:"arguments-1",level:4}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { VectorSource } from '@rnmapbox/maps';\n\nVectorSource\n\n")),(0,a.kt)("p",null,"VectorSource is a map content source that supplies tiled vector data in Mapbox Vector Tile format to be shown on the map.\nThe location of and metadata about the tiles are defined either by an option dictionary or by an external file that conforms to the TileJSON specification."),(0,a.kt)("h2",{id:"props"},"props"),(0,a.kt)("h3",{id:"id"},"id"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"string\n")),(0,a.kt)("p",null,"A string that uniquely identifies the source."),(0,a.kt)("p",null,"  ",(0,a.kt)("em",{parentName:"p"},"defaults to:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"MapboxGL.StyleSource.DefaultSourceID")),(0,a.kt)("h3",{id:"existing"},"existing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"boolean\n")),(0,a.kt)("p",null,"The id refers to en existing source in the style. Does not create a new source."),(0,a.kt)("h3",{id:"url"},"url"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"string\n")),(0,a.kt)("p",null,"A URL to a TileJSON configuration file describing the source\u2019s contents and other metadata."),(0,a.kt)("h3",{id:"tileurltemplates"},"tileUrlTemplates"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"Array\n")),(0,a.kt)("p",null,"An array of tile URL templates. If multiple endpoints are specified, clients may use any combination of endpoints.\nExample: ",(0,a.kt)("a",{parentName:"p",href:"https://example.com/vector-tiles/%7Bz%7D/%7Bx%7D/%7By%7D.pbf"},"https://example.com/vector-tiles/{z}/{x}/{y}.pbf")),(0,a.kt)("h3",{id:"minzoomlevel"},"minZoomLevel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,a.kt)("p",null,"An unsigned integer that specifies the minimum zoom level at which to display tiles from the source.\nThe value should be between 0 and 22, inclusive, and less than\nmaxZoomLevel, if specified. The default value for this option is 0."),(0,a.kt)("h3",{id:"maxzoomlevel"},"maxZoomLevel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,a.kt)("p",null,"An unsigned integer that specifies the maximum zoom level at which to display tiles from the source.\nThe value should be between 0 and 22, inclusive, and less than\nminZoomLevel, if specified. The default value for this option is 22."),(0,a.kt)("h3",{id:"tms"},"tms"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"boolean\n")),(0,a.kt)("p",null,"Influences the y direction of the tile coordinates. (tms inverts y axis)"),(0,a.kt)("h3",{id:"attribution"},"attribution"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"string\n")),(0,a.kt)("p",null,"An HTML or literal text string defining the buttons to be displayed in an action sheet when the\nsource is part of a map view\u2019s style and the map view\u2019s attribution button is pressed."),(0,a.kt)("h3",{id:"onpress"},"onPress"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"func\n")),(0,a.kt)("p",null,"Source press listener, gets called when a user presses one of the children layers only\nif that layer has a higher z-index than another source layers"),(0,a.kt)("p",null,"@param {Object} event\n@param {Object[]} event.features - the geojson features that have hit by the press (might be multiple)\n@param {Object} event.coordinates - the coordinates of the click\n@param {Object} event.point - the point of the click\n",(0,a.kt)("em",{parentName:"p"},"signature:"),(0,a.kt)("inlineCode",{parentName:"p"},"(event:OnPressEvent) =&gt; void")),(0,a.kt)("h3",{id:"hitbox"},"hitbox"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"type Hitbox = {\n  width: number; /* `width` of hitbox */\n  height: number; /* `height` of hitbox */\n}\n")),(0,a.kt)("p",null,"Overrides the default touch hitbox(44x44 pixels) for the source layers"),(0,a.kt)("h3",{id:"children"},"children"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"React.ReactElement | React.ReactElement[]\n")),(0,a.kt)("p",null,"FIX ME NO DESCRIPTION"),(0,a.kt)("h2",{id:"methods"},"methods"),(0,a.kt)("h3",{id:"featureslayerids"},"features(","[layerIDs][, filter]",")"),(0,a.kt)("p",null,"Returns all features that match the query parameters regardless of whether or not the feature is",(0,a.kt)("br",null),"currently rendered on the map. The domain of the query includes all currently-loaded vector tiles",(0,a.kt)("br",null),"and GeoJSON source tiles. This function does not check tiles outside of the visible viewport."),(0,a.kt)("h4",{id:"arguments"},"arguments"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"layerIDs")),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"Array")),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"No")),(0,a.kt)("td",{parentName:"tr",align:"center"},"A set of strings that correspond to the names of layers defined in the current style. Only the features contained in these layers are included in the returned array.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"filter")),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"Array")),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"No")),(0,a.kt)("td",{parentName:"tr",align:"center"},"an optional filter statement to filter the returned Features.")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"vectorSource.features(['id1', 'id2'])\n")),(0,a.kt)("h3",{id:"onpressevent"},"onPress(event)"),(0,a.kt)("h4",{id:"arguments-1"},"arguments"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"event")),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"NativeSyntheticEvent")),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("inlineCode",{parentName:"td"},"Yes")),(0,a.kt)("td",{parentName:"tr",align:"center"},"undefined")))))}m.isMDXComponent=!0}}]);