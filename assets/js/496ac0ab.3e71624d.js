"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[7774],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,h=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6850:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={title:"Show Click",tags:["MapView#onPress"],custom_props:{example_rel_path:"Map/ShowClick.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ShowClick.js"},s=void 0,i={unversionedId:"examples/Map/ShowClick",id:"examples/Map/ShowClick",title:"Show Click",description:"Demonstates onPress event and how to get the screen point of the click.",source:"@site/docs/examples/Map/ShowClick.md",sourceDirName:"examples/Map",slug:"/examples/Map/ShowClick",permalink:"/docs/examples/Map/ShowClick",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ShowClick.js",tags:[{label:"MapView#onPress",permalink:"/docs/tags/map-view-on-press"}],version:"current",frontMatter:{title:"Show Click",tags:["MapView#onPress"],custom_props:{example_rel_path:"Map/ShowClick.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Map/ShowClick.js"},sidebar:"examplesSidebar",previous:{title:"Show and hide layer",permalink:"/docs/examples/Map/ShowAndHideLayer"},next:{title:"Show Map",permalink:"/docs/examples/Map/ShowMap"}},c={},l=[],p={toc:l},m="wrapper";function u(e){let{components:t,...a}=e;return(0,o.kt)(m,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Demonstates onPress event and how to get the screen point of the click."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Text } from 'react-native';\nimport { MapView, Camera } from '@rnmapbox/maps';\n\nimport Bubble from '../common/Bubble';\n\nconst styles = { matchParent: { flex: 1 } };\n\nclass ShowClick extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      latitude: undefined,\n      longitude: undefined,\n      screenPointX: undefined,\n      screenPointY: undefined,\n    };\n\n    this.onPress = this.onPress.bind(this);\n  }\n\n  get hasValidLastClick() {\n    return (\n      typeof this.state.latitude === 'number' &&\n      typeof this.state.longitude === 'number'\n    );\n  }\n\n  onPress(event) {\n    const { geometry, properties } = event;\n\n    this.setState({\n      latitude: geometry.coordinates[1],\n      longitude: geometry.coordinates[0],\n      screenPointX: properties.screenPointX,\n      screenPointY: properties.screenPointY,\n    });\n  }\n\n  renderLastClicked() {\n    if (!this.hasValidLastClick) {\n      return (\n        <Bubble>\n          <Text>Click the map!</Text>\n        </Bubble>\n      );\n    }\n\n    return (\n      <Bubble testID=\"location-bubble\">\n        <Text testID=\"location-bubble-latitude\">\n          Latitude: {this.state.latitude}\n        </Text>\n        <Text testID=\"location-bubble-longitude\">\n          Longitude: {this.state.longitude}\n        </Text>\n        <Text>Screen Point X: {this.state.screenPointX}</Text>\n        <Text>Screen Point Y: {this.state.screenPointY}</Text>\n      </Bubble>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <MapView\n          style={styles.matchParent}\n          onPress={this.onPress}\n          testID={'show-click-map-view'}\n        >\n          <Camera\n            defaultSettings={{ centerCoordinate: [-77.036086, 38.910233] }}\n          />\n        </MapView>\n        {this.renderLastClicked()}\n      </>\n    );\n  }\n}\n\nexport default ShowClick;\n\n\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ShowClick.png",src:n(7820).Z,width:"295",height:"640"}),"}"))}u.isMDXComponent=!0},7820:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/ShowClick-d22d348c7d110e2407f99cfa14872e36.png"}}]);