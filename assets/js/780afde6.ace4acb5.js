"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[6105],{4285:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var s=n(5893),a=n(1151);const o={custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/modules/snapshot/snapshotManager.ts"},r=void 0,i={id:"components/snapshotManager",title:"snapshotManager",description:"The snapshotManager generates static raster images of the map.",source:"@site/docs/components/snapshotManager.md",sourceDirName:"components",slug:"/components/snapshotManager",permalink:"/docs/components/snapshotManager",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/blob/main/src/modules/snapshot/snapshotManager.ts",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/modules/snapshot/snapshotManager.ts"},sidebar:"componentSidebar",previous:{title:"offlineManagerLegacy",permalink:"/docs/components/offlineManagerLegacy"},next:{title:"tileStore",permalink:"/docs/components/tileStore"}},h={},p=[{value:"methods",id:"methods",level:2},{value:"takeSnap(options)",id:"takesnapoptions",level:3},{value:"arguments",id:"arguments",level:4}];function c(e){const t={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import { snapshotManager } from '@rnmapbox/maps';\n\nsnapshotManager\n\n"})}),"\n",(0,s.jsx)(t.p,{children:"The snapshotManager generates static raster images of the map.\nEach snapshot image depicts a portion of a map defined by an SnapshotOptions object you provide.\nThe snapshotter generates the snapshot asynchronous."}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"methods"}),"\n",(0,s.jsx)(t.h3,{id:"takesnapoptions",children:"takeSnap(options)"}),"\n",(0,s.jsx)(t.p,{children:"Takes a snapshot of the base map using the provided Snapshot options. NOTE pitch, heading, zoomLevel only works when centerCoordinate is set!"}),"\n",(0,s.jsx)(t.h4,{id:"arguments",children:"arguments"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Required"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"options"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"SnapshotOptions"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"Yes"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Snapshot options for create a static image of the base map"})]})})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"// creates a temp file png of base map\nconst uri = await MapboxGL.snapshotManager.takeSnap({\n  centerCoordinate: [-74.126410, 40.797968],\n  width: width,\n  height: height,\n  zoomLevel: 12,\n  pitch: 30,\n  heading: 20,\n  styleURL: MapboxGL.StyleURL.Dark,\n  writeToDisk: true, // Create a temporary file\n});\n\n// creates base64 png of base map without logo\nconst uri = await MapboxGL.snapshotManager.takeSnap({\n  centerCoordinate: [-74.126410, 40.797968],\n  width: width,\n  height: height,\n  zoomLevel: 12,\n  pitch: 30,\n  heading: 20,\n  styleURL: MapboxGL.StyleURL.Dark,\n  withLogo: false, // Disable Mapbox logo (Android only)\n});\n\n// creates snapshot with bounds\nconst uri = await MapboxGL.snapshotManager.takeSnap({\n  bounds: [[-74.126410, 40.797968], [-74.143727, 40.772177]],\n  width: width,\n  height: height,\n  styleURL: MapboxGL.StyleURL.Dark,\n});\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>r});var s=n(7294);const a={},o=s.createContext(a);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);