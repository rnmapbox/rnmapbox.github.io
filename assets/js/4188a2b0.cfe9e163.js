"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[9257],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>h});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=m(a),c=o,h=u["".concat(p,".").concat(c)]||u[c]||d[c]||l;return a?n.createElement(h,r(r({ref:t},s),{},{components:a})):n.createElement(h,r({ref:t},s))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=a.length,r=new Array(l);r[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:o,r[1]=i;for(var m=2;m<l;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},7932:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var n=a(7462),o=(a(7294),a(3905));const l={custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/components/Camera.tsx"},r=void 0,i={unversionedId:"components/Camera",id:"components/Camera",title:"Camera",description:"Controls the perspective from which the user sees the map.",source:"@site/docs/components/Camera.md",sourceDirName:"components",slug:"/components/Camera",permalink:"/docs/components/Camera",draft:!1,editUrl:"https://github.com/rnmapbox/maps/blob/main/src/components/Camera.tsx",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/rnmapbox/maps/blob/main/src/components/Camera.tsx"},sidebar:"componentSidebar",previous:{title:"Callout",permalink:"/docs/components/Callout"},next:{title:"CircleLayer",permalink:"/docs/components/CircleLayer"}},p={},m=[{value:"props",id:"props",level:2},{value:"type",id:"type",level:3},{value:"centerCoordinate",id:"centercoordinate",level:3},{value:"bounds",id:"bounds",level:3},{value:"heading",id:"heading",level:3},{value:"pitch",id:"pitch",level:3},{value:"zoomLevel",id:"zoomlevel",level:3},{value:"padding",id:"padding",level:3},{value:"animationDuration",id:"animationduration",level:3},{value:"animationMode",id:"animationmode",level:3},{value:"followUserLocation",id:"followuserlocation",level:3},{value:"followUserMode",id:"followusermode",level:3},{value:"followZoomLevel",id:"followzoomlevel",level:3},{value:"followPitch",id:"followpitch",level:3},{value:"followHeading",id:"followheading",level:3},{value:"followPadding",id:"followpadding",level:3},{value:"minZoomLevel",id:"minzoomlevel",level:3},{value:"maxZoomLevel",id:"maxzoomlevel",level:3},{value:"maxBounds",id:"maxbounds",level:3},{value:"defaultSettings",id:"defaultsettings",level:3},{value:"allowUpdates",id:"allowupdates",level:3},{value:"triggerKey",id:"triggerkey",level:3},{value:"onUserTrackingModeChange",id:"onusertrackingmodechange",level:3},{value:"methods",id:"methods",level:2},{value:"setCamera()",id:"setcamera",level:3},{value:"arguments",id:"arguments",level:4},{value:"fitBounds()",id:"fitbounds",level:3},{value:"arguments",id:"arguments-1",level:4},{value:"flyTo()",id:"flyto",level:3},{value:"arguments",id:"arguments-2",level:4},{value:"moveTo()",id:"moveto",level:3},{value:"arguments",id:"arguments-3",level:4},{value:"zoomTo()",id:"zoomto",level:3},{value:"arguments",id:"arguments-4",level:4}],s={toc:m},u="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Camera } from '@rnmapbox/maps';\n\nCamera\n\n")),(0,o.kt)("p",null,"Controls the perspective from which the user sees the map."),(0,o.kt)("p",null,"To use imperative methods, pass in a ref object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const camera = useRef&lt;Camera&gt;(null);\n\nuseEffect(() => {\n  camera.current?.setCamera({\n    centerCoordinate: [lon, lat],\n  });\n}, []);\n\nreturn (\n  &lt;Camera ref={camera} />\n);\n")),(0,o.kt)("h2",{id:"props"},"props"),(0,o.kt)("h3",{id:"type"},"type"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"literal\n")),(0,o.kt)("p",null,"Allows static check of the data type. For internal use only."),(0,o.kt)("h3",{id:"centercoordinate"},"centerCoordinate"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"Position\n")),(0,o.kt)("p",null,"The location on which the map should center."),(0,o.kt)("h3",{id:"bounds"},"bounds"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"intersection\n")),(0,o.kt)("p",null,"The corners of a box around which the map should bound. Contains padding props for backwards\ncompatibility; the root ",(0,o.kt)("inlineCode",{parentName:"p"},"padding")," prop should be used instead."),(0,o.kt)("h3",{id:"heading"},"heading"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,o.kt)("p",null,"The heading (orientation) of the map."),(0,o.kt)("h3",{id:"pitch"},"pitch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,o.kt)("p",null,"The pitch of the map."),(0,o.kt)("h3",{id:"zoomlevel"},"zoomLevel"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,o.kt)("p",null,"The zoom level of the map."),(0,o.kt)("h3",{id:"padding"},"padding"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"type Padding = {\n  paddingLeft: number; /* Left padding in points */\n  paddingRight: number; /* Right padding in points */\n  paddingTop: number; /* Top padding in points */\n  paddingBottom: number; /* Bottom padding in points */\n}\n")),(0,o.kt)("p",null,"The viewport padding in points."),(0,o.kt)("h3",{id:"animationduration"},"animationDuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,o.kt)("p",null,"The duration the map takes to animate to a new configuration."),(0,o.kt)("h3",{id:"animationmode"},"animationMode"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"| 'flyTo'\n| 'easeTo'\n| 'linearTo'\n| 'moveTo'\n| 'none'\n")),(0,o.kt)("p",null,"The easing or path the camera uses to animate to a new configuration."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../examples/V10/CameraAnimation"},"Camera Animation")),(0,o.kt)("h3",{id:"followuserlocation"},"followUserLocation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"boolean\n")),(0,o.kt)("p",null,"Whether the map orientation follows the user location."),(0,o.kt)("h3",{id:"followusermode"},"followUserMode"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"UserTrackingMode\n")),(0,o.kt)("p",null,"The mode used to track the user location on the map."),(0,o.kt)("h3",{id:"followzoomlevel"},"followZoomLevel"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,o.kt)("p",null,"The zoom level used when following the user location."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../examples/Map/ShowMap"},"Show Map")),(0,o.kt)("h3",{id:"followpitch"},"followPitch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,o.kt)("p",null,"The pitch used when following the user location."),(0,o.kt)("h3",{id:"followheading"},"followHeading"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,o.kt)("p",null,"The heading used when following the user location."),(0,o.kt)("h3",{id:"followpadding"},"followPadding"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"Partial\n")),(0,o.kt)("p",null,"The padding used to position the user location when following."),(0,o.kt)("h3",{id:"minzoomlevel"},"minZoomLevel"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,o.kt)("p",null,"The lowest allowed zoom level."),(0,o.kt)("h3",{id:"maxzoomlevel"},"maxZoomLevel"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"number\n")),(0,o.kt)("p",null,"The highest allowed zoom level."),(0,o.kt)("h3",{id:"maxbounds"},"maxBounds"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"type MaxBounds = {\n  ne: Position; /* FIX ME NO DESCRIPTION */\n  sw: Position; /* FIX ME NO DESCRIPTION */\n}\n")),(0,o.kt)("p",null,"The corners of a box defining the limits of where the camera can pan or zoom."),(0,o.kt)("h3",{id:"defaultsettings"},"defaultSettings"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"type DefaultSettings = {\n  type: literal; /* Allows static check of the data type. For internal use only. */\n  centerCoordinate: Position; /* The location on which the map should center. */\n  bounds: intersection; /* The corners of a box around which the map should bound. Contains padding props for backwards\ncompatibility; the root `padding` prop should be used instead. */\n  heading: number; /* The heading (orientation) of the map. */\n  pitch: number; /* The pitch of the map. */\n  zoomLevel: number; /* The zoom level of the map. */\n  padding: signature; /* The viewport padding in points. */\n  animationDuration: number; /* The duration the map takes to animate to a new configuration. */\n  animationMode: union; /* The easing or path the camera uses to animate to a new configuration. */\n}\n")),(0,o.kt)("p",null,"The configuration that the camera falls back on, if no other values are specified."),(0,o.kt)("h3",{id:"allowupdates"},"allowUpdates"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"boolean\n")),(0,o.kt)("p",null,"Whether the camera should send any configuration to the native module. Prevents unnecessary tile\nfetching and improves performance when the map is not visible. Defaults to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,o.kt)("h3",{id:"triggerkey"},"triggerKey"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"string | number\n")),(0,o.kt)("p",null,"Any arbitrary primitive value that, when changed, causes the camera to retry moving to its target\nconfiguration. (Not yet implemented.)"),(0,o.kt)("h3",{id:"onusertrackingmodechange"},"onUserTrackingModeChange"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"func\n")),(0,o.kt)("p",null,"Executes when user tracking mode changes.\n",(0,o.kt)("em",{parentName:"p"},"signature:"),(0,o.kt)("inlineCode",{parentName:"p"},"(event:MapboxGLEvent) =&gt; void")),(0,o.kt)("h2",{id:"methods"},"methods"),(0,o.kt)("h3",{id:"setcamera"},"setCamera()"),(0,o.kt)("p",null,"Sets any camera properties, with default fallbacks if unspecified."),(0,o.kt)("h4",{id:"arguments"},"arguments"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Description")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"camera.current?.setCamera({\n  centerCoordinate: [lon, lat],\n});\n")),(0,o.kt)("h3",{id:"fitbounds"},"fitBounds()"),(0,o.kt)("p",null,"Set the camera position to enclose the provided bounds, with optional",(0,o.kt)("br",null),"padding and duration."),(0,o.kt)("h4",{id:"arguments-1"},"arguments"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Description")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"camera.fitBounds([lon, lat], [lon, lat]);\ncamera.fitBounds([lon, lat], [lon, lat], [20, 0], 1000);\n")),(0,o.kt)("h3",{id:"flyto"},"flyTo()"),(0,o.kt)("p",null,"Sets the camera to center around the provided coordinate using a realistic 'travel'",(0,o.kt)("br",null),"animation, with optional duration."),(0,o.kt)("h4",{id:"arguments-2"},"arguments"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Description")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"camera.flyTo([lon, lat]);\ncamera.flyTo([lon, lat], 12000);\n")),(0,o.kt)("h3",{id:"moveto"},"moveTo()"),(0,o.kt)("p",null,"Sets the camera to center around the provided coordinate, with optional duration."),(0,o.kt)("h4",{id:"arguments-3"},"arguments"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Description")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"camera.moveTo([lon, lat], 200);\ncamera.moveTo([lon, lat]);\n")),(0,o.kt)("h3",{id:"zoomto"},"zoomTo()"),(0,o.kt)("p",null,"Zooms the camera to the provided level, with optional duration."),(0,o.kt)("h4",{id:"arguments-4"},"arguments"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Description")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"camera.zoomTo(16);\ncamera.zoomTo(16, 100);\n")))}d.isMDXComponent=!0}}]);