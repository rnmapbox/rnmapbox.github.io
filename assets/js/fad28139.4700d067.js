"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[690],{2078:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var o=n(5893),a=n(1151);const s={title:"Custom Callout",tags:["MarkerView"],custom_props:{example_rel_path:"Annotations/CustomCallout.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/CustomCallout.tsx"},r=void 0,l={id:"examples/Annotations/CustomCallout",title:"Custom Callout",description:"Use MarkerView to create a custom callout.",source:"@site/docs/examples/Annotations/CustomCallout.md",sourceDirName:"examples/Annotations",slug:"/examples/Annotations/CustomCallout",permalink:"/docs/examples/Annotations/CustomCallout",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/CustomCallout.tsx",tags:[{inline:!0,label:"MarkerView",permalink:"/docs/tags/marker-view"}],version:"current",frontMatter:{title:"Custom Callout",tags:["MarkerView"],custom_props:{example_rel_path:"Annotations/CustomCallout.tsx"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/Annotations/CustomCallout.tsx"},sidebar:"examplesSidebar",previous:{title:"Introduction",permalink:"/docs/examples/"},next:{title:"Heatmap",permalink:"/docs/examples/Annotations/Heatmap"}},i={},m=[];function u(e){const t={code:"code",img:"img",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Use MarkerView to create a custom callout."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import Mapbox, { type SymbolLayerStyle } from '@rnmapbox/maps';\nimport { Feature } from '@turf/helpers';\nimport React, { useState } from 'react';\nimport { StyleProp, Text, TextStyle, View, ViewStyle } from 'react-native';\n\nimport exampleIcon from '../../assets/pin.png';\nimport sheet from '../../styles/sheet';\nimport { ExampleWithMetadata } from '../common/ExampleMetadata'; // exclude-from-doc\n\nconst defaultCamera = {\n  centerCoordinate: [12.338, 45.4385],\n  zoomLevel: 17.4,\n};\n\nconst featureCollection: GeoJSON.FeatureCollection<GeoJSON.Geometry> = {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      id: '9d10456e-bdda-4aa9-9269-04c1667d4552',\n      properties: {\n        icon: 'example',\n        message: 'Hello!',\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [12.338, 45.4385],\n      },\n    },\n  ],\n};\n\ntype CustomCalloutViewProps = {\n  message: string;\n};\n\nconst CustomCalloutView = ({ message }: CustomCalloutViewProps) => {\n  return (\n    <View style={styles.calloutContainerStyle}>\n      <Text style={styles.customCalloutText}>{message}</Text>\n    </View>\n  );\n};\n\nconst CustomCallout = () => {\n  const [selectedFeature, setSelectedFeature] =\n    useState<GeoJSON.Feature<GeoJSON.Point>>();\n\n  const onPinPress = (e: { features: Array<GeoJSON.Feature> }): void => {\n    if (selectedFeature) {\n      setSelectedFeature(undefined);\n      return;\n    }\n\n    const feature = e?.features[0] as Feature<GeoJSON.Point>;\n    setSelectedFeature(feature);\n  };\n\n  return (\n    <Mapbox.MapView style={sheet.matchParent}>\n      <Mapbox.Camera defaultSettings={defaultCamera} />\n      <Mapbox.Images images={{ exampleIcon }} />\n      <Mapbox.ShapeSource\n        id=\"mapPinsSource\"\n        shape={featureCollection}\n        onPress={onPinPress}\n      >\n        <Mapbox.SymbolLayer id=\"mapPinsLayer\" style={styles.mapPinLayer} />\n      </Mapbox.ShapeSource>\n      {selectedFeature && (\n        <Mapbox.MarkerView coordinate={selectedFeature.geometry.coordinates}>\n          <CustomCalloutView message={selectedFeature?.properties?.message} />\n        </Mapbox.MarkerView>\n      )}\n    </Mapbox.MapView>\n  );\n};\n\nconst styles: {\n  matchParent: StyleProp<ViewStyle>;\n  mapPinLayer: SymbolLayerStyle;\n  customCalloutText: StyleProp<TextStyle>;\n  calloutContainerStyle: StyleProp<ViewStyle>;\n} = {\n  matchParent: {\n    flex: 1,\n  },\n  mapPinLayer: {\n    iconAllowOverlap: true,\n    iconAnchor: 'bottom',\n    iconSize: 1.0,\n    iconImage: 'exampleIcon',\n  },\n  customCalloutText: {\n    color: 'black',\n    fontSize: 16,\n  },\n  calloutContainerStyle: {\n    backgroundColor: 'white',\n    width: 60,\n    height: 40,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n};\n\nexport default CustomCallout;\n\n\n"})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.img,{alt:"CustomCallout.png",src:n(8993).Z+"",width:"295",height:"640"}),"}"]})]})}function c(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8993:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/CustomCallout-616138bdf24baf3d9a0e10074695dcc5.png"},1151:(e,t,n)=>{n.d(t,{a:()=>r});var o=n(7294);const a={},s=o.createContext(a);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}}}]);