"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[6677],{6259:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(5893),s=n(1151);const o={title:"Query Feature Point",tags:[],custom_props:{example_rel_path:"FillRasterLayer/QueryAtPoint.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/QueryAtPoint.js"},a=void 0,i={id:"examples/FillRasterLayer/QueryAtPoint",title:"Query Feature Point",description:"QueryAtPoint.png}",source:"@site/docs/examples/FillRasterLayer/QueryAtPoint.md",sourceDirName:"examples/FillRasterLayer",slug:"/examples/FillRasterLayer/QueryAtPoint",permalink:"/docs/examples/FillRasterLayer/QueryAtPoint",draft:!1,unlisted:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/QueryAtPoint.js",tags:[],version:"current",frontMatter:{title:"Query Feature Point",tags:[],custom_props:{example_rel_path:"FillRasterLayer/QueryAtPoint.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/QueryAtPoint.js"},sidebar:"examplesSidebar",previous:{title:"Indoor Building Map",permalink:"/docs/examples/FillRasterLayer/IndoorBuilding"},next:{title:"Query Source Features",permalink:"/docs/examples/FillRasterLayer/QuerySourceFeatures"}},l={},c=[];function p(e){const t={code:"code",img:"img",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:"import React from 'react';\nimport { Text } from 'react-native';\nimport {\n  MapView,\n  Camera,\n  ShapeSource,\n  FillLayer,\n  StyleURL,\n} from '@rnmapbox/maps';\n\nimport sheet from '../../styles/sheet';\nimport nycJSON from '../../assets/nyc_geojson.json';\nimport BaseExamplePropTypes from '../common/BaseExamplePropTypes';\nimport Bubble from '../common/Bubble';\n\nconst styles = {\n  neighborhoods: {\n    fillAntialias: true,\n    fillColor: 'blue',\n    fillOutlineColor: 'black',\n    fillOpacity: 0.84,\n  },\n  selectedNeighborhood: {\n    fillAntialias: true,\n    fillColor: 'green',\n    fillOpacity: 0.84,\n  },\n};\n\nclass QueryAtPoint extends React.Component {\n  static propTypes = {\n    ...BaseExamplePropTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = this.emptyState;\n    this.onPress = this.onPress.bind(this);\n  }\n\n  get emptyState() {\n    return { selectedGeoJSON: null, selectedCommunityDistrict: -1 };\n  }\n\n  async onPress(e) {\n    const { screenPointX, screenPointY } = e.properties;\n\n    const featureCollection = await this._map.queryRenderedFeaturesAtPoint(\n      [screenPointX, screenPointY],\n      null,\n      ['nycFill'],\n    );\n\n    if (featureCollection.features.length) {\n      this.setState({\n        selectedGeoJSON: featureCollection,\n        selectedCommunityDistrict:\n          featureCollection.features[0].properties.communityDistrict,\n      });\n    } else {\n      this.setState(this.emptyState);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <MapView\n          ref={(c) => {\n            this._map = c;\n          }}\n          onPress={this.onPress}\n          style={sheet.matchParent}\n          styleURL={StyleURL.Light}\n        >\n          <Camera zoomLevel={9} centerCoordinate={[-73.970895, 40.723279]} />\n\n          <ShapeSource id=\"nyc\" shape={nycJSON}>\n            <FillLayer id=\"nycFill\" style={styles.neighborhoods} />\n          </ShapeSource>\n\n          {this.state.selectedGeoJSON ? (\n            <ShapeSource id=\"selectedNYC\" shape={this.state.selectedGeoJSON}>\n              <FillLayer\n                id=\"selectedNYCFill\"\n                style={styles.selectedNeighborhood}\n              />\n            </ShapeSource>\n          ) : null}\n        </MapView>\n\n        <Bubble>\n          <Text>Press on a feature to highlight it.</Text>\n        </Bubble>\n      </>\n    );\n  }\n}\n\nexport default QueryAtPoint;\n\n\n"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.img,{alt:"QueryAtPoint.png",src:n(9009).Z+"",width:"295",height:"640"}),"}"]})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},9009:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/QueryAtPoint-0c710a90391a35ee5390d75192f4fceb.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>a});var r=n(7294);const s={},o=r.createContext(s);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);