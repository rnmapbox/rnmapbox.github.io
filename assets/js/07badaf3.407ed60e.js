"use strict";(self.webpackChunkmap_docs=self.webpackChunkmap_docs||[]).push([[6832],{3905:(e,r,t)=>{t.d(r,{Zo:()=>i,kt:()=>y});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=o.createContext({}),u=function(e){var r=o.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},i=function(e){var r=u(e.components);return o.createElement(l.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},f=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=u(t),f=n,y=p["".concat(l,".").concat(f)]||p[f]||m[f]||a;return t?o.createElement(y,c(c({ref:r},i),{},{components:t})):o.createElement(y,c({ref:r},i))}));function y(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,c=new Array(a);c[0]=f;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[p]="string"==typeof e?e:n,c[1]=s;for(var u=2;u<a;u++)c[u]=t[u];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2551:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=t(7462),n=(t(7294),t(3905));const a={title:"Custom Vector Source",tags:["VectorSource","VectorSource#features"],custom_props:{example_rel_path:"FillRasterLayer/CustomVectorSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/CustomVectorSource.js"},c=void 0,s={unversionedId:"examples/FillRasterLayer/CustomVectorSource",id:"examples/FillRasterLayer/CustomVectorSource",title:"Custom Vector Source",description:"CustomVectorSource.png}",source:"@site/docs/examples/FillRasterLayer/CustomVectorSource.md",sourceDirName:"examples/FillRasterLayer",slug:"/examples/FillRasterLayer/CustomVectorSource",permalink:"/docs/examples/FillRasterLayer/CustomVectorSource",draft:!1,editUrl:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/CustomVectorSource.js",tags:[{label:"VectorSource",permalink:"/docs/tags/vector-source"},{label:"VectorSource#features",permalink:"/docs/tags/vector-source-features"}],version:"current",frontMatter:{title:"Custom Vector Source",tags:["VectorSource","VectorSource#features"],custom_props:{example_rel_path:"FillRasterLayer/CustomVectorSource.js"},custom_edit_url:"https://github.com/rnmapbox/maps/tree/master/example/src/examples/FillRasterLayer/CustomVectorSource.js"},sidebar:"examplesSidebar",previous:{title:"Choropleth Layer By Zoom Level",permalink:"/docs/examples/FillRasterLayer/ChoroplethLayerByZoomLevel"},next:{title:"GeoJSON Source",permalink:"/docs/examples/FillRasterLayer/GeoJSONSource"}},l={},u=[],i={toc:u},p="wrapper";function m(e){let{components:r,...a}=e;return(0,n.kt)(p,(0,o.Z)({},i,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { MapView, Camera, VectorSource, FillLayer } from '@rnmapbox/maps';\n\nconst styles = {\n  boxFill: {\n    fillColor: [\n      'interpolate',\n      ['linear'],\n      ['get', 'box'],\n      0,\n      'green',\n      1,\n      'blue',\n    ],\n\n    fillAntialias: true,\n  },\n  matchParent: {\n    flex: 1,\n  },\n};\n\nconst VECTOR_SOURCE_URL =\n  'mapbox://nickitaliano.cj94go8xl18fl2qp92v8bdivv-4kgl9';\n\nclass CustomVectorSource extends React.PureComponent {\n  state = {\n    featuresCount: null,\n  };\n\n  queryFeatures = async () => {\n    const features = await this._vectorSource.features([\n      'react-native-example',\n    ]);\n    this.setState({ featuresCount: features.features.length });\n  };\n\n  render() {\n    return (\n      <MapView style={styles.matchParent}>\n        <Camera zoomLevel={2} centerCoordinate={[-101.051593, 41.370337]} />\n\n        <VectorSource\n          id=\"customSourceExample\"\n          url={VECTOR_SOURCE_URL}\n          ref={(source) => {\n            this._vectorSource = source;\n          }}\n          onPress={(e) => {\n            console.log(`VectorSource onPress: ${e.features}`, e.features);\n          }}\n        >\n          <FillLayer\n            id=\"customSourceFill\"\n            sourceLayerID=\"react-native-example\"\n            style={styles.boxFill}\n          />\n        </VectorSource>\n      </MapView>\n    );\n  }\n}\n\nexport default CustomVectorSource;\n\n\n")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"CustomVectorSource.png",src:t(2577).Z,width:"295",height:"640"}),"}"))}m.isMDXComponent=!0},2577:(e,r,t)=>{t.d(r,{Z:()=>o});const o=t.p+"assets/images/CustomVectorSource-4f7d04038defb6ec930d41adde10a67f.png"}}]);